<?xml version='1.0' encoding='utf-8'?>
<project xmlns:ns1="http://www.plcopen.org/xml/tc6_0201" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.plcopen.org/xml/tc6_0201">
  <fileHeader companyName="Unbekannt" productName="Unbenannt" productVersion="1" creationDateTime="2019-09-20T15:08:46"/>
  <contentHeader name="Unbenannt" modificationDateTime="2019-09-24T14:37:37">
    <coordinateInfo>
      <fbd>
        <scaling x="10" y="10"/>
      </fbd>
      <ld>
        <scaling x="10" y="10"/>
      </ld>
      <sfc>
        <scaling x="10" y="10"/>
      </sfc>
    </coordinateInfo>
  </contentHeader>
  <types>
    <dataTypes>
      <dataType name="OSCAT_SDT">
        <baseType>
          <struct>
            <variable name="YEAR">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="MONTH">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="DAY">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="WEEKDAY">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="HOUR">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="MINUTE">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="SECOND">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="MS">
              <type>
                <INT/>
              </type>
            </variable>
          </struct>
        </baseType>
      </dataType>
    </dataTypes>
    <pous>
      <pou name="BIT_OF_DWORD" pouType="function">
        <interface>
          <returnType>
            <BOOL/>
          </returnType>
          <inputVars>
            <variable name="IN">
              <type>
                <DWORD/>
              </type>
            </variable>
            <variable name="N">
              <type>
                <INT/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[BIT_OF_DWORD := (SHR(in,N) AND 16#00000001) > 0;
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this function extracts a single bit from the nth position from right (right is lowest bit the lowest Bit (Bit0 from in) is selected with N=0]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="EVEN" pouType="function">
        <interface>
          <returnType>
            <BOOL/>
          </returnType>
          <inputVars>
            <variable name="IN">
              <type>
                <DINT/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[even := NOT BIT_OF_DWORD(DINT_TO_DWORD(in),0);
(* from OSCAT library; www.oscat.de  *)
(* BIT_OF_DWORD required *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[checks an input for even  value the output is true if the input is even]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="BIT_LOAD_W" pouType="function">
        <interface>
          <returnType>
            <WORD/>
          </returnType>
          <inputVars>
            <variable name="IN">
              <type>
                <WORD/>
              </type>
            </variable>
            <variable name="VAL">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="POS">
              <type>
                <INT/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF VAL THEN
	BIT_LOAD_W := in OR SHL(WORD#1,pos);
ELSE
	BIT_LOAD_W := in AND (NOT SHL(WORD#1,pos));
END_IF;

(*From OSCAT Library, www.oscat.de*)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this function loads a bit into a Word at position pos]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="T_PLC_MS" pouType="function">
        <interface>
          <returnType>
            <UDINT/>
          </returnType>
          <localVars>
            <variable name="tx">
              <type>
                <UDINT/>
              </type>
            </variable>
          </localVars>
          <inputVars>
            <variable name="debug">
              <type>
                <BOOL/>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="N">
              <type>
                <INT/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
            </variable>
            <variable name="offset">
              <type>
                <UDINT/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
            </variable>
            <variable name="temp">
              <type>
                <DWORD/>
              </type>
              <initialValue>
                <simpleValue value="1"/>
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[tx := 0;

{extern unsigned long __tick;
extern unsigned long long common_ticktime__;
unsigned long long ticktime_ms = (common_ticktime__)/1000000;
UDINT plc_time = (UDINT)(ticktime_ms * (unsigned long long)__tick);
TX = plc_time}

T_PLC_MS := tx;
IF debug THEN
	T_PLC_MS := (DWORD_TO_UDINT(SHL(UDINT_TO_DWORD(T_PLC_MS),N) OR SHL(temp,N))-1) + OFFSET;
END_IF;

(* Original Code:
tx := TIME();
T_PLC_MS := TIME_TO_DWORD(Tx);
IF debug THEN
	T_PLC_MS := (SHL(T_PLC_MS,N) OR SHL(DWORD#1,N)-1) + OFFSET;
END_IF;
*)

(* From OSCAT library, www.oscat.de

this is a temporary T_PLC_MS FB until OpenPLC gets itÂ´s own time() functionality *)

(* PLC_TIME and Global variables PLC_SCAN_CYCL and PLC_CYCL_TIME required *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[Output current execution time in miliseconds]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="LEAP_DAY" pouType="function">
        <interface>
          <returnType>
            <BOOL/>
          </returnType>
          <inputVars>
            <variable name="IDATE">
              <type>
                <UDINT/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[LEAP_DAY := IDATE MOD UDINT#126230400 = UDINT#68169600;

(* From OSCAT LIBRARY, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
      </pou>
      <pou name="YEAR_END" pouType="function">
        <interface>
          <returnType>
            <UDINT/>
          </returnType>
          <inputVars>
            <variable name="Y">
              <type>
                <INT/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[YEAR_END := DWORD_TO_UDINT(SHR(UDINT_TO_DWORD(INT_TO_UDINT(y) * UDINT#1461 - UDINT#2876712), 2)) * UDINT#86400;

(* From OSCAT LIBRARY, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
      </pou>
      <pou name="MONTH_END" pouType="function">
        <interface>
          <returnType>
            <UDINT/>
          </returnType>
          <inputVars>
            <variable name="IDATE">
              <type>
                <UDINT/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[MONTH_END := SET_DATE(YEAR_OF_DATE(idate),MONTH_OF_DATE(idate)+1,1) - UDINT#86400;

(* From OSCAT LIBRARY, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
      </pou>
      <pou name="DATE_TO_DT" pouType="function">
        <interface>
          <returnType>
            <UDINT/>
          </returnType>
          <inputVars>
            <variable name="IN">
              <type>
                <UDINT/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[DATE_TO_DT := IN;


(* From OSCAT LIBRARY, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
      </pou>
      <pou name="TIME_TO_TOD" pouType="function">
        <interface>
          <returnType>
            <UDINT/>
          </returnType>
          <inputVars>
            <variable name="IN">
              <type>
                <TIME/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[TIME_TO_TOD := DWORD_TO_UDINT(TIME_TO_DWORD(IN));


(* From OSCAT LIBRARY, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
      </pou>
      <pou name="TOD_TO_TIME" pouType="function">
        <interface>
          <returnType>
            <TIME/>
          </returnType>
          <inputVars>
            <variable name="IN">
              <type>
                <UDINT/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[TOD_TO_TIME := DWORD_TO_TIME(UDINT_TO_DWORD(IN));

(* From OSCAT LIBRARY, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
      </pou>
      <pou name="YEAR_BEGIN" pouType="function">
        <interface>
          <returnType>
            <UDINT/>
          </returnType>
          <inputVars>
            <variable name="Y">
              <type>
                <INT/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[year_begin := DWORD_TO_UDINT(SHR(UDINT_TO_DWORD(INT_TO_UDINT(y) * UDINT#1461 - UDINT#2878169),2))  *  UDINT#86400;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[returs the date of january 1st for the given year the function works for dates from 1970 - 2099]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="LEAP_YEAR" pouType="function">
        <interface>
          <returnType>
            <BOOL/>
          </returnType>
          <inputVars>
            <variable name="YEAR">
              <type>
                <INT/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF (year MOD INT#400) = INT#00 THEN
  leap_year := TRUE;
ELSIF (year MOD INT#100) = INT#00 THEN
  leap_year := FALSE;
ELSIF (year MOD INT#04) = INT#00 THEN
  leap_year := TRUE;
ELSE
  leap_year := FALSE;
END_IF;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[leap_year is true if the tested year is a leap year]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="WORK_WEEK" pouType="function">
        <interface>
          <returnType>
            <INT/>
          </returnType>
          <inputVars>
            <variable name="IDATE">
              <type>
                <UDINT/>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="d1">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="w1">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="ds">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="yr">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="w31">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="w01">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="wm">
              <type>
                <INT/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[(* berechne den 1.1 des jahres von idate. *)
yr := YEAR_OF_DATE(idate);
d1 := year_begin(yr);
(* wochentag von d1 *)
w1 := DAY_OF_WEEK(d1);
(* offset des montags der eletzten KW des vorjahres *)
(* wenn der erste tag des jahres grÃ¶Ãer als donnerstag ist dann beginnt die letzte kw am montag davor *)
(* wenn der erste tag des jahres ein donnerstag oder kleiner ist beginnt die erste kw 2 montage davor *)
IF w1 < 5 THEN
	ds := d1 - INT_TO_UDINT(w1+6) * UDINT#86400;
ELSE
	ds := d1 + INT_TO_UDINT(1-w1) * UDINT#86400;
END_IF;

(* kalenderwoche des eingangsdatums *)
work_week := UDINT_TO_INT((idate - ds) / UDINT#604800);

(* korrektur wenn work_week = 0 *)
IF work_week = 0 THEN
	(* work_week needs to be 53 when 1.jan of the year before is thursday or dec 31. is thursday. *)
	(* first and last weekday of a year is equal and one more day for a leap_year. *)
	IF w1 > 1 THEN w31 := w1 - 1; ELSE W31 := 7; END_IF;
	IF leap_year(yr - 1) THEN IF w31 > 1 THEN w01 := W31 - 1; ELSE w1 := 7; END_IF; END_IF;
	(* if first or last day of a year is a thursday, the year has 53 weeks *)
	WORK_WEEK := 52 + BOOL_TO_INT(w31 = 4 OR w01 = 4);
ELSE
	(* end of year calculation *)
	(* calculated the first and last weekday *)
	IF leap_year(yr) THEN
		IF w1 < 7 THEN w31 := w1 + 1; ELSE w31 := 1; END_IF;
	ELSE
		w31 := w1;
	END_IF;
	(* if first or last day is thursday then the year has 53 weeks otherwise only 52 *)
	wm := 52 + BOOL_TO_INT(w31 = 4 OR w1 = 4);
	IF work_week > wm THEN work_week := 1; END_IF;
END_IF;

(* From OSCAT Library, www.oscat.de *)
]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[calculates the work week for a given date according to iso8601]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="REFRACTION" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="ELEV">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="tmp">
              <type>
                <REAL/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[tmp := LIMIT(-1.9, elev, 80.0);
REFRACTION := 0.0174532925199433 / TAN(0.0174532925199433 * (tmp + 10.3 / (tmp + 5.11)));

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[REFRACTION calculates the atmospheric refraction in degrees. the input angle goes from 0 at the hirizon to 90 at midday.]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="HOUR_TO_TIME" pouType="function">
        <interface>
          <returnType>
            <TIME/>
          </returnType>
          <inputVars>
            <variable name="IN">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[hour_to_time := UDINT_TO_TIME(REAL_TO_UDINT(IN * 3600000.0));

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[converts an amount of hours in real to time]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="HOUR_TO_TOD" pouType="function">
        <interface>
          <returnType>
            <UDINT/>
          </returnType>
          <inputVars>
            <variable name="IN">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[hour_to_tod := REAL_TO_UDINT(IN * 3600000.00);

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[converts an amount of hours in real to time of day TOD]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="SUN_MIDDAY" pouType="function">
        <interface>
          <returnType>
            <UDINT/>
          </returnType>
          <inputVars>
            <variable name="LON">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="UTC">
              <type>
                <UDINT/>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="_t">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="offset">
              <type>
                <REAL/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[_T := INT_TO_REAL(DAY_OF_YEAR(utc));
OFFSET := -0.1752 * SIN(0.033430 * _T + 0.5474) - 0.1340 * SIN(0.018234 * _T - 0.1939);
SUN_MIDDAY := HOUR_TO_TOD(12.0 - OFFSET - lon * 0.0666666666666);

(* HOUR_TO_TOD required *)
(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this FUNCTION calculates the time when the sun stand exactly south of a given location]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="DATE_ADD" pouType="function">
        <interface>
          <returnType>
            <UDINT/>
          </returnType>
          <inputVars>
            <variable name="IDATE">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="_D">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="W">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="M">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="Y">
              <type>
                <INT/>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="mo">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="yr">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="dm">
              <type>
                <INT/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[DATE_ADD := IDATE + INT_TO_UDINT(_D + W * 7) * UDINT#86400;
yr := Y + YEAR_OF_DATE(DATE_ADD);
mo := M + MONTH_OF_DATE(DATE_ADD);
dm := DAY_OF_MONTH(DATE_ADD);
WHILE mo > 12 DO
	mo := mo - 12;
	yr := yr + 1;
END_WHILE;
WHILE mo < 1 DO
	mo := mo + 12;
	yr := yr - 1;
END_WHILE;
DATE_ADD := SET_DATE(yr, mo, dm);

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[date_add adds days, weeks, month or years to a date. negative inputs are allowed for subtraction.]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="EASTER" pouType="function">
        <interface>
          <returnType>
            <UDINT/>
          </returnType>
          <inputVars>
            <variable name="YEAR">
              <type>
                <INT/>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="b">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="c">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="oday">
              <type>
                <INT/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[b := (204 - 11 * (year MOD 19)) MOD 30;
IF b > 27 THEN b := b - 1; END_IF;
c := (year + WORD_TO_INT(SHR(INT_TO_WORD(year),2)) + b - 13) MOD 7;
oday := 28 + b - c;
IF oday > 33 THEN
	easter := set_Date(year, 4, oday - 31);
ELSE
	easter := set_Date(year, 3, oday);
END_IF;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[easter calculates the day of easter sunday for a given year. most other catholic holidays are calculated in reference to easter ]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="DAY_OF_WEEK" pouType="function">
        <interface>
          <returnType>
            <INT/>
          </returnType>
          <inputVars>
            <variable name="IDATE">
              <type>
                <UDINT/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[DAY_OF_WEEK := UDINT_TO_INT((idate / UDINT#86400 + UDINT#3) MOD UDINT#7) + INT#01;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[calculates the weekday of a week according to ISO8601 monday = 1 ..... sunday = 7]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="DAY_OF_MONTH" pouType="function">
        <interface>
          <returnType>
            <INT/>
          </returnType>
          <inputVars>
            <variable name="IDATE">
              <type>
                <UDINT/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[day_of_month := day_of_year(idate);

IF leap_of_Date(idate) THEN
	CASE day_of_month OF
		32..60	:	day_of_month := day_of_month - 31;
		61..91	:	day_of_month := day_of_month - 60;
		92..121 :	day_of_month := day_of_month - 91;
		122..152:	day_of_month := day_of_month - 121;
		153..182:	day_of_month := day_of_month - 152;
		183..213:	day_of_month := day_of_month - 182;
		214..244:	day_of_month := day_of_month - 213;
		245..274:	day_of_month := day_of_month - 244;
		275..305:	day_of_month := day_of_month - 274;
		306..335:	day_of_month := day_of_month - 305;
		336..366:	day_of_month := day_of_month - 335;
	END_CASE;
ELSE
	CASE day_of_month OF
		32..59	:	day_of_month := day_of_month - 31;
		60..90	:	day_of_month := day_of_month - 59;
		91..120 :	day_of_month := day_of_month - 90;
		121..151:	day_of_month := day_of_month - 120;
		152..181:	day_of_month := day_of_month - 151;
		182..212:	day_of_month := day_of_month - 181;
		213..243:	day_of_month := day_of_month - 212;
		244..273:	day_of_month := day_of_month - 243;
		274..304:	day_of_month := day_of_month - 273;
		305..334:	day_of_month := day_of_month - 304;
		335..365:	day_of_month := day_of_month - 334;
	END_CASE;
END_IF;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[returns the day OF month for any DATE]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="LEAP_OF_DATE" pouType="function">
        <interface>
          <returnType>
            <BOOL/>
          </returnType>
          <inputVars>
            <variable name="IDATE">
              <type>
                <UDINT/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[LEAP_OF_DATE := SHL(UDINT_TO_DWORD((idate + UDINT#43200) / UDINT#31557600), 30) = DWORD#16#80000000;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[leap_of_date is true if current year is a leap year]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="DAY_OF_YEAR" pouType="function">
        <interface>
          <returnType>
            <INT/>
          </returnType>
          <inputVars>
            <variable name="IDATE">
              <type>
                <UDINT/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[DAY_OF_YEAR := UDINT_TO_INT((idate / UDINT#86400) MOD UDINT#1461);
IF DAY_OF_YEAR > 729 THEN
	IF DAY_OF_YEAR > 1095 THEN DAY_OF_YEAR := DAY_OF_YEAR - 1095; ELSE DAY_OF_YEAR := DAY_OF_YEAR - 729; END_IF;
ELSIF DAY_OF_YEAR > 364 THEN
	DAY_OF_YEAR := DAY_OF_YEAR - 364;
ELSE
	DAY_OF_YEAR := DAY_OF_YEAR + 1;
END_IF;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[calculates the day of the year]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="MONTH_OF_DATE" pouType="function">
        <interface>
          <returnType>
            <INT/>
          </returnType>
          <inputVars>
            <variable name="IDATE">
              <type>
                <UDINT/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[MONTH_OF_DATE := DAY_OF_YEAR(idate);
IF MONTH_OF_DATE < 32 THEN
	MONTH_OF_DATE := 1;
ELSIF LEAP_OF_DATE(IDATE) THEN
	MONTH_OF_DATE := (MONTH_OF_DATE * 53 + 1668) / 1623;
ELSE
	MONTH_OF_DATE := (MONTH_OF_DATE * 53 + 1700) / 1620;
END_IF;

(* From OSCAT Library, www.oscat.de *)
(* DAY_OF_YEAR, LEAP_OF_DATE required *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[returns the current month of the year]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="HOUR" pouType="function">
        <interface>
          <returnType>
            <INT/>
          </returnType>
          <inputVars>
            <variable name="ITOD">
              <type>
                <UDINT/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[hour := UDINT_TO_INT(itod / UDINT#3600000);

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[extracts the hour of a Time_of_day]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="DAY_OF_DATE" pouType="function">
        <interface>
          <returnType>
            <DINT/>
          </returnType>
          <inputVars>
            <variable name="IDATE">
              <type>
                <UDINT/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[day_of_date := UDINT_TO_DINT(idate / UDINT#86400);

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
      </pou>
      <pou name="SET_DATE" pouType="function">
        <interface>
          <returnType>
            <UDINT/>
          </returnType>
          <inputVars>
            <variable name="YEAR">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="MONTH">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="DAY">
              <type>
                <INT/>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="count">
              <type>
                <INT/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF month > 2 THEN
	count := (month - 1) * 30;
	IF month > 7 THEN
		count := count + DWORD_TO_INT(SHR(DINT_TO_DWORD(INT_TO_DINT(month) - INT_TO_DINT(3)),1));
	ELSE
		count := count + DWORD_TO_INT(SHR(DINT_TO_DWORD(INT_TO_DINT(month) - INT_TO_DINT(4)),1));
	END_IF;
	(* chech for leap year and add one day if true *)
	IF SHL(INT_TO_WORD(year),14) = WORD#0 THEN
		count := count + 1;
	END_IF;
ELSE
	count := (month - 1) * 31;
END_IF;
SET_DATE := (INT_TO_UDINT(count + day - 1) + DWORD_TO_UDINT(SHR(UDINT_TO_DWORD(INT_TO_UDINT(year) * UDINT#1461 - UDINT#2878169), 2))) * UDINT#86400;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[creates a date output from year, month and day of month]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="SET_DT" pouType="function">
        <interface>
          <returnType>
            <UDINT/>
          </returnType>
          <inputVars>
            <variable name="YEAR">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="MONTH">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="DAY">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="_HOUR">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="MINUTE">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="SECOND">
              <type>
                <INT/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[SET_DT := SET_DATE(YEAR, MONTH, DAY) + INT_TO_UDINT(SECOND) + INT_TO_UDINT(MINUTE) * UDINT#60 + INT_TO_UDINT(_HOUR) * UDINT#3600;

(* From OSCAT Library, www.oscat.de *)
(* SET_DATW requires *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[creates a date output from year, month and day of month year must be in the form of 4 digits ie 2006 or 1977]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="_DT_TO_DATE" pouType="function">
        <interface>
          <returnType>
            <UDINT/>
          </returnType>
          <inputVars>
            <variable name="IN">
              <type>
                <UDINT/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[_DT_TO_DATE := (IN / UDINT#86400) * UDINT#86400;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[Zeitanteil aus Date-Time herausfiltern ]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="YEAR_OF_DATE" pouType="function">
        <interface>
          <returnType>
            <INT/>
          </returnType>
          <inputVars>
            <variable name="IDATE">
              <type>
                <UDINT/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[YEAR_OF_DATE := UDINT_TO_INT((IDATE+UDINT#43200) / UDINT#31557600 + UDINT#1970);

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[returs the year of a date the function works for dates from 1970 - 2099]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="DST" pouType="function">
        <interface>
          <returnType>
            <BOOL/>
          </returnType>
          <inputVars>
            <variable name="UTC">
              <type>
                <UDINT/>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="yr">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="yr4">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="ltc">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="idate">
              <type>
                <UDINT/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[yr := YEAR_OF_DATE(_DT_TO_DATE(UTC));
ltc := UTC;
idate := SET_DT(yr, 3, 31, 1, 0, 0);
yr4 := DWORD_TO_UDINT(SHR(INT_TO_DWORD(5 * yr), 2)) + UDINT#1;
DST := (idate - ((yr4 + UDINT#3) MOD UDINT#7) * UDINT#86400 <= ltc) AND (idate + (UDINT#214 - (yr4) MOD UDINT#7) * UDINT#86400 > ltc);

(* From OSCAT Library, www.oscat.de *)
(* YEAR_OF_DATE, _DT_TO_DATE, SET_DT requires *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this functions returns TRUE IF dst TIME is active the FUNCTION calculates automatically for any year betweek 1970 AND 2099 wheather daylight savings is on OR off the summertime calculation is done according to european standards. dst will become TRUE AT 01:00 utc in the morning FOR the respective days AND it will become FALSE after daylight savings TIME is switched back end OF october at 01:00 utc]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="UTC_TO_LTIME" pouType="function">
        <interface>
          <returnType>
            <UDINT/>
          </returnType>
          <inputVars>
            <variable name="UTC">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="DST_ENABLE">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="TIME_ZONE_OFFSET">
              <type>
                <INT/>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="tmp">
              <type>
                <INT/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[UTC_TO_LTIME := UTC + INT_TO_UDINT(TIME_ZONE_OFFSET) * UDINT#60 + BOOL_TO_UDINT(DST_ENABLE AND DST(UTC)) * UDINT#3600;


tmp := TIME_ZONE_OFFSET * 60 + BOOL_TO_INT(DST_ENABLE AND DST(UTC)) * 3600;
IF tmp < 0 THEN
	UTC_TO_LTIME := UTC - INT_TO_UDINT(ABS(tmp));
ELSE
	UTC_TO_LTIME := UTC + INT_TO_UDINT(tmp);
END_IF;


(* From OSCAT Library, www.oscat.de *)
(* DST requiered *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[ltime is a real time clock that uses the system rtc as utc time and calculates and given time zone. the utc time is supplied on the input UTC. according to the input variable time_zone_offset when the input dst_enable is true, the dst on and off times are calculated by a formula for any given year and the time is advanced and reset by one hour at 02:00 and 03:00 for the last sunday of march and last sunday of october. the code is high performance and the rtc counts every second. if more then one time zone is needed by the systen the clock can be started many times by placing more then one function block]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="DEG" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="RAD_IN">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[DEG := MODR(57.29577951308232 * RAD_IN, 360.0);
(* from OSCAT library; www.oscat.de  *)
(* MODR and FLOOR2 required *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this function converts degrees into Radiant execution time ]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="RAD" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="_DEG">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[RAD := modR(0.0174532925199433 * _deg , 6.283185307179586476);
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this function converts Radiant to degrees]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="FLOOR2" pouType="function">
        <interface>
          <returnType>
            <DINT/>
          </returnType>
          <inputVars>
            <variable name="x">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[FLOOR2 := REAL_TO_DINT(X);
IF DINT_TO_REAL(FLOOR2) > X THEN
	FLOOR2 := FLOOR2 - DINT#1;
END_IF;
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[This is a rounding function which returns the biggest possible integer which is less or equal to X. floor2(3.14) = 3 floor2(-3.14) = -4]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="MODR" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="IN">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="DIVI">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF divi = 0.0 THEN
	MODR := 0.0;
ELSE
	MODR := in - DINT_TO_REAL(FLOOR2(in / divi)) * divi;
END_IF;
(* from OSCAT library; www.oscat.de  *)
(* FC FLOOR2 required *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[modulo funtion for real numbers modr(5.5,2.5) = 0.5]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="program0" pouType="program">
        <interface>
          <localVars>
            <variable name="LocalVar0">
              <type>
                <DINT/>
              </type>
            </variable>
            <variable name="LocalVar1">
              <type>
                <DINT/>
              </type>
            </variable>
            <variable name="LocalVar2">
              <type>
                <DINT/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <FBD>
            <block localId="1" typeName="ADD" executionOrderId="0" height="60" width="70">
              <position x="520" y="120"/>
              <inputVariables>
                <variable formalParameter="IN1">
                  <connectionPointIn>
                    <relPosition x="0" y="30"/>
                    <connection refLocalId="2">
                      <position x="520" y="150"/>
                      <position x="470" y="150"/>
                    </connection>
                  </connectionPointIn>
                </variable>
                <variable formalParameter="IN2">
                  <connectionPointIn>
                    <relPosition x="0" y="50"/>
                    <connection refLocalId="3">
                      <position x="520" y="170"/>
                      <position x="470" y="170"/>
                    </connection>
                  </connectionPointIn>
                </variable>
              </inputVariables>
              <inOutVariables/>
              <outputVariables>
                <variable formalParameter="OUT">
                  <connectionPointOut>
                    <relPosition x="70" y="30"/>
                  </connectionPointOut>
                </variable>
              </outputVariables>
            </block>
            <inVariable localId="2" executionOrderId="0" height="30" width="90" negated="false">
              <position x="380" y="130"/>
              <connectionPointOut>
                <relPosition x="90" y="20"/>
              </connectionPointOut>
              <expression>LocalVar0</expression>
            </inVariable>
            <inVariable localId="3" executionOrderId="0" height="30" width="90" negated="false">
              <position x="380" y="160"/>
              <connectionPointOut>
                <relPosition x="90" y="10"/>
              </connectionPointOut>
              <expression>LocalVar1</expression>
            </inVariable>
            <outVariable localId="4" executionOrderId="0" height="30" width="90" negated="false">
              <position x="640" y="140"/>
              <connectionPointIn>
                <relPosition x="0" y="10"/>
              </connectionPointIn>
              <expression>LocalVar2</expression>
            </outVariable>
          </FBD>
        </body>
      </pou>
      <pou name="DAY_TO_TIME" pouType="function">
        <interface>
          <returnType>
            <TIME/>
          </returnType>
          <inputVars>
            <variable name="IN">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[day_to_time := DINT_TO_TIME(UDINT_TO_DINT(REAL_TO_UDINT(IN * REAL#86400000.00)));

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[converts an amount of days in real to time]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="DAYS_DELTA" pouType="function">
        <interface>
          <returnType>
            <DINT/>
          </returnType>
          <inputVars>
            <variable name="DATE_1">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="DATE_2">
              <type>
                <UDINT/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF DATE_1 > DATE_2 THEN
	DAYS_DELTA := - UDINT_TO_DINT((date_1 - date_2) / UDINT#86400);
ELSE
	DAYS_DELTA :=   UDINT_TO_DINT((date_2 - date_1) / UDINT#86400);
END_IF;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[days_delta calculates the days between two dates]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="DAYS_IN_MONTH" pouType="function">
        <interface>
          <returnType>
            <INT/>
          </returnType>
          <inputVars>
            <variable name="IDATE">
              <type>
                <UDINT/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[DAYS_IN_MONTH := DAY_OF_YEAR(IDATE);
IF LEAP_OF_DATE(IDATE) THEN
	CASE DAYS_IN_MONTH OF
		32..60	:	DAYS_IN_MONTH := 29;
		92..121 :	DAYS_IN_MONTH := 30;
		153..182:	DAYS_IN_MONTH := 30;
		245..274:	DAYS_IN_MONTH := 30;
		306..335:	DAYS_IN_MONTH := 30;
	ELSE
		DAYS_IN_MONTH := 31;
	END_CASE;
ELSE
	CASE DAYS_IN_MONTH OF
		32..59	:	DAYS_IN_MONTH := 28;
		91..120 :	DAYS_IN_MONTH := 30;
		152..181:	DAYS_IN_MONTH := 30;
		244..273:	DAYS_IN_MONTH := 30;
		305..334:	DAYS_IN_MONTH := 30;
	ELSE
		DAYS_IN_MONTH := 31;
	END_CASE;
END_IF;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[returs the total days of the current month]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="DAYS_IN_YEAR" pouType="function">
        <interface>
          <returnType>
            <INT/>
          </returnType>
          <inputVars>
            <variable name="IDATE">
              <type>
                <UDINT/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF LEAP_OF_DATE(IDATE) THEN
	DAYS_IN_YEAR := 366;
ELSE
	DAYS_IN_YEAR := 365;
END_IF;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[returs the total days of the year]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="DCF77" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="REC">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="SET">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="SDT">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="DSI">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="SYNC_TIMEOUT">
              <type>
                <TIME/>
              </type>
              <initialValue>
                <simpleValue value="t#2m"/>
              </initialValue>
            </variable>
            <variable name="TIME_OFFSET">
              <type>
                <INT/>
              </type>
              <initialValue>
                <simpleValue value="1"/>
              </initialValue>
            </variable>
            <variable name="DST_EN">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="TRUE"/>
              </initialValue>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="_TP">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="DS">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="WDAY">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="ERROR">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="TRUE"/>
              </initialValue>
            </variable>
            <variable name="_RTC">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="RTC1">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="MSEC">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="SYNC">
              <type>
                <BOOL/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="MEZ">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="UTC">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="state">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="edge">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="tx">
              <type>
                <TIME/>
              </type>
            </variable>
            <variable name="ty">
              <type>
                <TIME/>
              </type>
            </variable>
            <variable name="last">
              <type>
                <TIME/>
              </type>
            </variable>
            <variable name="bits">
              <type>
                <array>
                  <dimension lower="0" upper="58"/>
                  <baseType>
                    <BOOL/>
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="cnt">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="i">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="old_time">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="minute">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="_hour">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="day">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="month">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="year">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="last_sync">
              <type>
                <TIME/>
              </type>
            </variable>
            <variable name="t1">
              <type>
                <TIME/>
              </type>
            </variable>
            <variable name="tz">
              <type>
                <TIME/>
              </type>
            </variable>
            <variable name="init">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="word_temp">
              <type>
                <WORD/>
              </type>
            </variable>
            <variable name="bool_temp">
              <type>
                <BOOL/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[(* if tp was set it should only be active for 1 cycle *)
_TP := FALSE;

(* read system time *)
t1:= UDINT_TO_TIME(T_PLC_MS(en:=true));
tx := t1 - last;

IF rec XOR edge THEN
	edge := rec;
	IF NOT rec AND tx > t#1700ms AND tx < t#2000ms THEN
		(* start condition reached *)
		state := 0;
		_tp := NOT error;
	ELSIF NOT rec AND tx > t#700ms AND tx < t#1000ms THEN
		(* second switch detected *)
		IF state < 58 THEN state := state +1; ELSE state := 0; END_IF;
	ELSIF rec AND tx  < t#120ms THEN
		(* bit 0 detected  *)
		bits[state] := FALSE;
	ELSIF rec AND tx > t#120ms AND tx < t#250ms THEN
		(* bit 1 detected *)
		bits[state] := TRUE;
	ELSE
		(* error condition received signal is not valid *)
		error := TRUE;
		state := 0;
	END_IF;
	last := last + tx;
	IF rec AND state = 58 THEN
		error := FALSE;

		(* decode the bits and check for possible errors *)
		IF bits[0] OR NOT (bits[17] XOR bits[18]) OR NOT bits[20] THEN error := TRUE; END_IF;
		(* decode minute *)
        word_temp := WORD#0;

        bool_temp:=bits[21];
        word_temp:=BIT_LOAD_W(word_temp,bool_temp,0);    (* word_temp.X0 := bits[21]; *)
        bool_temp:=bits[22];
        word_temp:=BIT_LOAD_W(word_temp,bool_temp,1);    (* word_temp.X1 := bits[22]; *)
        bool_temp:=bits[23];
        word_temp:=BIT_LOAD_W(word_temp,bool_temp,2);    (* word_temp.X2 := bits[23]; *)
        bool_temp:=bits[24];
        word_temp:=BIT_LOAD_W(word_temp,bool_temp,3);    (* word_temp.X3 := bits[24]; *)

        minute := WORD_TO_INT(word_temp);
		IF bits[25] THEN minute := minute +10; END_IF;
		IF bits[26] THEN minute := minute +20; END_IF;
		IF bits[27] THEN minute := minute +40; END_IF;
		IF minute > 59 OR (bits[21] XOR bits[22] XOR bits[23] XOR bits[24] XOR bits[25] XOR bits[26] XOR bits[27] XOR bits[28]) THEN error := TRUE; END_IF;

		(* decode hour *)
        word_temp := WORD#0;

        bool_temp:=bits[29];
        word_temp:=BIT_LOAD_W(word_temp,bool_temp,0);    (* word_temp.X0 := bits[29]; *)
        bool_temp:=bits[30];
        word_temp:=BIT_LOAD_W(word_temp,bool_temp,1);    (* word_temp.X1 := bits[30]; *)
        bool_temp:=bits[31];
        word_temp:=BIT_LOAD_W(word_temp,bool_temp,2);    (* word_temp.X2 := bits[31]; *)
        bool_temp:=bits[32];
        word_temp:=BIT_LOAD_W(word_temp,bool_temp,3);    (* word_temp.X3 := bits[32]; *)

        _hour := WORD_TO_INT(word_temp);
		IF bits[33] THEN _hour := _hour +10; END_IF;
		IF bits[34] THEN _hour := _hour +20; END_IF;
		IF _hour > 23 OR (bits[29] XOR bits[30] XOR bits[31] XOR bits[32] XOR bits[33] XOR bits[34] XOR bits[35]) THEN error := TRUE; END_IF;

		(* decode day of month *)
        word_temp := WORD#0;

        bool_temp:=bits[36];
        word_temp:=BIT_LOAD_W(word_temp,bool_temp,0);    (* word_temp.X0 := bits[36]; *)
        bool_temp:=bits[37];
        word_temp:=BIT_LOAD_W(word_temp,bool_temp,1);    (* word_temp.X1 := bits[37]; *)
        bool_temp:=bits[38];
        word_temp:=BIT_LOAD_W(word_temp,bool_temp,2);    (* word_temp.X2 := bits[38]; *)
        bool_temp:=bits[39];
        word_temp:=BIT_LOAD_W(word_temp,bool_temp,3);    (* word_temp.X3 := bits[39]; *)

        day := WORD_TO_INT(word_temp);
		IF bits[40] THEN day := day + 10; END_IF;
		IF bits[41] THEN day := day + 20; END_IF;
		IF day > 31 THEN error := TRUE; END_IF;

		(* decode day of week *)
        word_temp := WORD#0;

        bool_temp:=bits[42];
        word_temp:=BIT_LOAD_W(word_temp,bool_temp,0);    (* word_temp.X0 := bits[42]; *)
        bool_temp:=bits[43];
        word_temp:=BIT_LOAD_W(word_temp,bool_temp,1);    (* word_temp.X1 := bits[43]; *)
        bool_temp:=bits[44];
        word_temp:=BIT_LOAD_W(word_temp,bool_temp,2);    (* word_temp.X2 := bits[44]; *)

        wday := WORD_TO_INT(word_temp);
		IF wday > 7 OR wday < 1 THEN error := TRUE; END_IF;

		(* decode month *)
        word_temp := WORD#0;

        bool_temp:=bits[45];
        word_temp:=BIT_LOAD_W(word_temp,bool_temp,0);    (* word_temp.X0 := bits[45]; *)
        bool_temp:=bits[46];
        word_temp:=BIT_LOAD_W(word_temp,bool_temp,1);    (* word_temp.X1 := bits[46]; *)
        bool_temp:=bits[47];
        word_temp:=BIT_LOAD_W(word_temp,bool_temp,2);    (* word_temp.X2 := bits[47]; *)
        bool_temp:=bits[48];
        word_temp:=BIT_LOAD_W(word_temp,bool_temp,3);    (* word_temp.X3 := bits[48]; *)

        month := WORD_TO_INT(word_temp);
		IF bits[49] THEN month := month +10; END_IF;
		IF month > 12 THEN error := TRUE; END_IF;

		(* decode year *)
        word_temp := WORD#0;

        bool_temp:=bits[50];
        word_temp:=BIT_LOAD_W(word_temp,bool_temp,0);    (* word_temp.X0 := bits[50]; *)
        bool_temp:=bits[51];
        word_temp:=BIT_LOAD_W(word_temp,bool_temp,1);    (* word_temp.X1 := bits[51]; *)
        bool_temp:=bits[52];
        word_temp:=BIT_LOAD_W(word_temp,bool_temp,2);    (* word_temp.X2 := bits[52]; *)
        bool_temp:=bits[53];
        word_temp:=BIT_LOAD_W(word_temp,bool_temp,3);    (* word_temp.X3 := bits[53]; *)

        year := WORD_TO_INT(word_temp);
		IF bits[54] THEN year := year + 10; END_IF;
		IF bits[55] THEN year := year + 20; END_IF;
		IF bits[56] THEN year := year + 40; END_IF;
		IF bits[57] THEN year := year + 80; END_IF;

		(* check parity for bits 36 to 58 *)
		cnt := 0;
		FOR i := 36 TO 58 DO IF bits[i] THEN cnt := cnt + 1; END_IF; END_FOR;
		IF NOT even(INT_TO_DINT(cnt)) THEN error := TRUE; END_IF;

		(* time must be valid for two cycles to clear error flag *)
		IF NOT error THEN
			(* set outputs *)
			old_time := mez;
			IF year >= 70 THEN year := year + 1900; ELSE year := year + 2000; END_IF;
			mez := set_DT(year,month,day,_hour,minute,0);
			DS := bits[17];
			IF DS THEN
				UTC := mez - UDINT#7200;
			ELSE
				UTC := mez - UDINT#3600;
			END_IF;

			(* set trigger signal only if the receiver has received 2 successive minutes *)
			IF mez <> old_time + TIME_TO_UDINT(t#1m) THEN error := TRUE ; END_IF;
		END_IF;
	END_IF;
END_IF;

(* this portion implements a free running clock which is triggered by the dcf77 signal *)
tz := UDINT_TO_TIME(INT_TO_UDINT(ABS(time_offset))* UDINT#3600000);

(* input sdt is copied to utc at first power up *)
IF NOT init OR SET THEN
	init := TRUE;
	utc := sdt;
	_tp := TRUE;
	DS := DSI;
END_IF;

IF _tp THEN
	_rtc := utc;
	IF DS AND dst_en THEN
		IF time_offset < 0 THEN
        	rtc1 := _rtc - TIME_TO_UDINT(tz + t#1h);
        ELSE 
            rtc1 := _rtc + TIME_TO_UDINT(tz + t#1h);
        END_IF;
	ELSE
		IF time_offset < 0 THEN
            rtc1 := _rtc - TIME_TO_UDINT(tz);
        ELSE
            rtc1 := _rtc + TIME_TO_UDINT(tz);
        END_IF;
	END_IF;
	sync := TRUE;
	last_sync := last;
	ty := last;
ELSIF _rtc > UDINT#0 AND T1 - ty >= t#1s THEN
	_rtc := _rtc + TIME_TO_UDINT(t#1s);
	rtc1 := rtc1 + TIME_TO_UDINT(t#1s);
	ty := ty + t#1s;
	sync := ty - last_sync < sync_timeout AND last_sync > t#0s;
	wday := DAY_OF_WEEK(_DT_TO_DATE(rtc1));
	DS := dst_en AND DST(utc);
END_IF;
msec := TIME_TO_INT(t1 - ty);

(* From OSCAT Library, www.oscat.de *)
(* T_PLC_MS requiered *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this is a decoder for a DCF77 signal]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="DT2_TO_SDT" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="DI">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="TI">
              <type>
                <UDINT/>
              </type>
            </variable>
          </inputVars>
          <inOutVars>
            <variable name="SDT">
              <type>
                <derived name="OSCAT_SDT"/>
              </type>
            </variable>
          </inOutVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[SDT.YEAR := YEAR_OF_DATE(di);
SDT.MONTH := MONTH_OF_DATE(di);
SDT.DAY := DAY_OF_MONTH(di);
SDT.WEEKDAY := DAY_OF_WEEK(di);
SDT.MS := UDINT_TO_INT(ti MOD UDINT#1000);
SDT.SECOND := UDINT_TO_INT((ti / UDINT#1000) MOD UDINT#60);
SDT.MINUTE := UDINT_TO_INT((ti / UDINT#60000) MOD UDINT#60);
SDT.HOUR := UDINT_TO_INT(ti / UDINT#3600000);

(* From OSCAT Library, www.oscat.de *)
(* OSCAT_SDT (datatypa) requiered *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[converts date and time of day to Structured date time (SDT)]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="DT_TO_SDT" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="DTI">
              <type>
                <UDINT/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="SDT">
              <type>
                <derived name="OSCAT_SDT"/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="tmp">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="tdt">
              <type>
                <UDINT/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[tmp := _DT_TO_DATE(dti);
tdt := dti - tmp;
SDT.YEAR := YEAR_OF_DATE(tmp);
SDT.MONTH := MONTH_OF_DATE(tmp);
SDT.DAY := DAY_OF_MONTH(tmp);
SDT.WEEKDAY := DAY_OF_WEEK(tmp);
SDT.SECOND := UDINT_TO_INT(tdt MOD UDINT#60);
SDT.MINUTE := UDINT_TO_INT((tdt / UDINT#60) MOD UDINT#60);
SDT.HOUR := UDINT_TO_INT(tdt / UDINT#3600);

(* From OSCAT Library, www.oscat.de *)
(* OSCAT_SDT (datatype) requiered *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[converts date_time to Structured date time (SDT)]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="HOUR_OF_DT" pouType="function">
        <interface>
          <returnType>
            <INT/>
          </returnType>
          <inputVars>
            <variable name="XDT">
              <type>
                <UDINT/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[HOUR_OF_DT := UDINT_TO_INT((XDT MOD UDINT#86400) / UDINT#3600);

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[HOUR_OF_DT returns the current hour (hour of the day) of a DT variable]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="JD2000" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="DTI">
              <type>
                <UDINT/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[JD2000 := UDINT_TO_REAL(DTI - UDINT#946728000) / 86400.0;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[JULIAN calculates the astronomic julian date from 1.1.2000-12:00]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="LTIME_TO_UTC" pouType="function">
        <interface>
          <returnType>
            <UDINT/>
          </returnType>
          <inputVars>
            <variable name="LTIME">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="_DST">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="TIME_ZONE_OFFSET">
              <type>
                <INT/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[LTIME_TO_UTC := LTIME - INT_TO_UDINT(TIME_ZONE_OFFSET * 60);
IF _DST THEN LTIME_TO_UTC := LTIME_TO_UTC - UDINT#3600; END_IF;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[LTIME_TO_UTC calculates UTC (World Time) from a local time LTIME]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="_MINUTE" pouType="function">
        <interface>
          <returnType>
            <INT/>
          </returnType>
          <inputVars>
            <variable name="ITOD">
              <type>
                <UDINT/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[_minute := UDINT_TO_INT((itod / UDINT#60000) - ((itod / UDINT#3600000) * UDINT#60));

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[extracts the minutes out of TOD truncating the ceconds]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="MINUTE_OF_DT" pouType="function">
        <interface>
          <returnType>
            <INT/>
          </returnType>
          <outputVars>
            <variable name="XDT">
              <type>
                <UDINT/>
              </type>
            </variable>
          </outputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[MINUTE_OF_DT := UDINT_TO_INT((XDT MOD UDINT#3600) / UDINT#60);

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[MINUTE_OF_DT returns the current minute (minute of the hour) of a DT]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="MINUTE_TO_TIME" pouType="function">
        <interface>
          <returnType>
            <TIME/>
          </returnType>
          <inputVars>
            <variable name="IN">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[minute_to_time := UDINT_TO_TIME(REAL_TO_UDINT(IN * 60000.0));

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[converts an amount of minutes in real to time]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="MONTH_BEGIN" pouType="function">
        <interface>
          <returnType>
            <UDINT/>
          </returnType>
          <inputVars>
            <variable name="IDATE">
              <type>
                <UDINT/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[MONTH_BEGIN := idate - INT_TO_UDINT(DAY_OF_MONTH(idate) - 1) * UDINT#86400;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[returns the date for the first day of the current month]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="_MULTIME" pouType="function">
        <interface>
          <returnType>
            <TIME/>
          </returnType>
          <inputVars>
            <variable name="_T">
              <type>
                <TIME/>
              </type>
            </variable>
            <variable name="M">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[_multime := DWORD_TO_TIME(REAL_TO_DWORD(DWORD_TO_REAL(TIME_TO_DWORD(_t))*M));

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[multiplies a time by a real number and returns a time]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="PERIOD" pouType="function">
        <interface>
          <returnType>
            <BOOL/>
          </returnType>
          <inputVars>
            <variable name="D1">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="D2">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="DX">
              <type>
                <UDINT/>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="day1">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="day2">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="dayx">
              <type>
                <INT/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[day1 := day_of_year(d1);
day2 := day_of_year(d2);
dayx := day_of_year(dx);
IF NOT leap_of_Date(dx) AND dayx > 58 THEN dayx := dayx + 1; END_IF;
IF NOT leap_of_Date(d1) AND day1 > 58 THEN day1 := day1 + 1; END_IF;
IF NOT leap_of_Date(d2) AND day2 > 58 THEN day2 := day2 + 1; END_IF;

IF day2 < day1 THEN
	(* the period spans over the new year *)
	period := dayx <= day2 OR dayx >= day1;
ELSE
	period := dayx >= day1 AND dayx <= day2;
END_IF;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[PERIOD checks if a given date is between two dates]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="RTC_MS" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="SET">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="SDT">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="SMS">
              <type>
                <INT/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="XDT">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="XMS">
              <type>
                <INT/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="init">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="last">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="tx">
              <type>
                <UDINT/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[tx:= T_PLC_MS(en:=true);

IF set OR NOT init THEN
	(* clock needs to be set when set is true or after power up *)
	init := TRUE;
	xdt := SDT;
	XMS := SMS;
ELSE
	XMS := XMS + UDINT_TO_INT(tx - last);
	(* check if one second has expired *)
	IF XMS > 999 THEN
		XDT := XDT + UDINT#1; (* add one second *)
		XMS := XMS - 1000;
	END_IF;
END_IF;
last := tx;

(* From OSCAT Library, www.oscat.de *)
(* T_PLC_MS required *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[RTC_MS is a real time clock module which can be set to SDT]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="RTC_2" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="SET">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="SDT">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="SMS">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="DEN">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="OFS">
              <type>
                <INT/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="UDT">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="LDT">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="DSO">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="XMS">
              <type>
                <INT/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="RT">
              <type>
                <derived name="RTC_MS"/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[(* call rtc *)
RT(SET := SET, SDT := SDT, SMS := SMS);
UDT := rt.xdt;
XMS := rt.XMS;

(* check for daylight savings time and set dso output *)
dso := DST(udt) AND DEN;

(* calculate time offset and set ldt output *)
LDT := UDT + INT_TO_UDINT(ofs + BOOL_TO_INT(DSO) * 60) * UDINT#60;

(* From OSCAT Library, www.oscat.de *)
(* RTC_MS required *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[RTC_2 is a real time clock ]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="SDT_TO_DATE" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="DTI">
              <type>
                <derived name="OSCAT_SDT"/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="_SDT_TO_DATE">
              <type>
                <UDINT/>
              </type>
            </variable>
          </outputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[_SDT_TO_DATE := SET_DATE(DTI.YEAR, DTI.MONTH, DTI.DAY);

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[converts Structured date time (SDT) to Date Time]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="SDT_TO_DT" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="DTI">
              <type>
                <derived name="OSCAT_SDT"/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="_SDT_TO_DT">
              <type>
                <UDINT/>
              </type>
            </variable>
          </outputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[_SDT_TO_DT := SET_DT(DTI.YEAR, DTI.MONTH, DTI.DAY, DTI.HOUR, DTI.MINUTE, DTI.SECOND);

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[converts Structured date time (SDT) to Date Time]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="SDT_TO_TOD" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="DTI">
              <type>
                <derived name="OSCAT_SDT"/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="_SDT_TO_TOD">
              <type>
                <UDINT/>
              </type>
            </variable>
          </outputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[_SDT_TO_TOD := INT_TO_UDINT(DTI.HOUR) * UDINT#3600000 + INT_TO_UDINT(DTI.MINUTE) * UDINT#60000 + INT_TO_UDINT(DTI.SECOND) * UDINT#1000 + INT_TO_UDINT(DTI.MS);

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[converts Structured date time (SDT) to Date Time]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="_SECOND" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="ITOD">
              <type>
                <UDINT/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[_second := UDINT_TO_REAL(itod MOD UDINT#60000) / REAL#1000.00;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[returns the seconds and milliseconds as real of TOD]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="SECOND_OF_DT" pouType="function">
        <interface>
          <returnType>
            <INT/>
          </returnType>
          <inputVars>
            <variable name="XDT">
              <type>
                <UDINT/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[SECOND_OF_DT := UDINT_TO_INT(XDT MOD UDINT#60);

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[SECOND_OF_DT returns the current second (second of minute) of a DT]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="SECOND_TO_TIME" pouType="function">
        <interface>
          <returnType>
            <TIME/>
          </returnType>
          <inputVars>
            <variable name="IN">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[second_to_time := UDINT_TO_TIME(REAL_TO_UDINT(IN * 1000.0));

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[converts an amount of seconds in real to time]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="SET_TOD" pouType="function">
        <interface>
          <returnType>
            <UDINT/>
          </returnType>
          <inputVars>
            <variable name="_HOUR">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="MINUTE">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="SECOND">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[set_Tod := REAL_TO_UDINT(second * 1000.0) + INT_TO_UDINT(minute) * UDINT#60000 + INT_TO_UDINT(_hour) * UDINT#3600000;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[creates tod from hour minute and second]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="SUN_POS" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="LATITUDE">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="LONGITUDE">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="UTC">
              <type>
                <UDINT/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="B">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="HR">
              <type>
                <REAL/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="g">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="a">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="_d">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="h">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="t1">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="n">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="_e">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="c">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="tau">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="sin_d">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="rlat">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="sin_lat">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="cos_lat">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="cos_tau">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="cos_d">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="Math_PI">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="3.14159265358979323846264338327950288"/>
              </initialValue>
            </variable>
            <variable name="Math_PI2">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="6.28318530717958647692528676655900576"/>
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[(* EXIT the routine IF it was executed within 10 seconds which is equal to 0.04 degrees accuracy
depending on startup conditions this could lead to a lockup for 10 seconds and not delivering a usable position
tx := T_PLC_MS();
IF tx - last < 10000 THEN RETURN; END_IF;
last := tx;
*)

(* n is the julian date and the number of days since 1.1.2000-12:00 midday *)
(* be careful for step7 date startes 1.1.1990 instead of 1.1.1970 *)
(* for step7 this line must change *)
n := UDINT_TO_REAL(UTC - UDINT#946728000) * 0.000011574074074074;
g :=MODR(6.240040768 + 0.01720197 * n, MATH_PI2);
_d := MODR(4.89495042 + 0.017202792 * n, MATH_PI2) + 0.033423055 * SIN(g) + 0.000349066 * SIN(2.0*g);
_e := 0.409087723 - 0.000000006981317008 * n;
cos_d := COS(_d);
sin_d := SIN(_d);
a := ATAN(COS(_e) * sin_d / cos_d);
IF cos_d < 0.0 THEN a := a + MATH_PI; END_IF;
c := ASIN(SIN(_e) * sin_d);

(* also here we must be very careful utc is from 1.1.1970 for step7 the formula must change *)
tau := RAD(MODR(6.697376 + (n - 0.25) * 0.0657098245037645 + UDINT_TO_REAL(_DT_TO_TOD(utc)) * 0.0000002785383333, 24.0) * 15.0 + longitude) - a;
rlat := RAD(latitude);
sin_lat := SIN(rlat);
cos_lat := COS(rlat);
cos_tau := COS(tau);
t1 := cos_tau * sin_lat - TAN(c) * cos_lat;
B := ATAN(SIN(tau) / t1);
IF t1 < 0.0 THEN B := B + MATH_PI2; ELSE B := B + MATH_PI; END_IF;
B := DEG(MODR(B, MATH_PI2));
h := DEG(ASIN(COS(C) * cos_tau * cos_lat +SIN(c) * sin_lat));
IF h > 180.0 THEN h := h - 360.0; END_IF;
(* consider refraction *)
HR := h + REFRACTION(h);

(* From OSCAT Library, www.oscat.de *)
(* T_PLC_MS required *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[calculates the sun position for a given date]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="_DT_TO_TOD" pouType="function">
        <interface>
          <returnType>
            <UDINT/>
          </returnType>
          <inputVars>
            <variable name="IN">
              <type>
                <UDINT/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[_DT_TO_TOD := (IN MOD UDINT#86400) * UDINT#1000;

]]></xhtml:p>
          </ST>
        </body>
      </pou>
      <pou name="SUN_TIME" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="LATITUDE">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="LONGITUDE">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="UTC">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="H">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="-0.83333333333"/>
              </initialValue>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="MIDDAY">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="SUN_RISE">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="SUN_SET">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="SUN_DECLINATION">
              <type>
                <REAL/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="DK">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="delta">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="b">
              <type>
                <REAL/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[B := latitude * 0.0174532925199433;
MIDDAY := SUN_MIDDAY(longitude, utc);
DK := 0.40954 * SIN(0.0172 * (INT_TO_REAL(DAY_OF_YEAR(utc)) - 79.35));
sun_declination := DEG(DK);
IF sun_declination > 180.0 THEN sun_declination := sun_declination - 360.0; END_IF;
sun_declination := 90.0 - LATITUDE + sun_declination;
delta := TIME_TO_UDINT(HOUR_TO_TIME(ACOS((SIN(RAD(H)) - SIN(B) * SIN(DK)) / (COS(B) * COS(DK))) * 3.819718632));
sun_rise := MIDDAY - delta;
sun_set := MIDDAY + delta;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this FUNCTION block calculates the sun rise, sun set, ]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="TIMECHECK" pouType="function">
        <interface>
          <returnType>
            <BOOL/>
          </returnType>
          <inputVars>
            <variable name="TD">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="START">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="STOP">
              <type>
                <UDINT/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF stop < start THEN
	TIMECHECK := start <= TD OR  TD < stop;
ELSE
	TIMECHECK := start <= TD AND TD < stop;
END_IF;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this function retruns true if the daytime TD is between start and stop]]></xhtml:p>
        </documentation>
      </pou>
    </pous>
  </types>
  <instances>
    <configurations>
      <configuration name="Config0">
        <resource name="Res0">
          <task name="task0" priority="0" interval="T#20ms">
            <pouInstance name="instance0" typeName="program0"/>
          </task>
        </resource>
      </configuration>
    </configurations>
  </instances>
</project>
