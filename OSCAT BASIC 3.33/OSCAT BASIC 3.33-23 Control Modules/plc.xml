<?xml version='1.0' encoding='utf-8'?>
<project xmlns:ns1="http://www.plcopen.org/xml/tc6_0201" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.plcopen.org/xml/tc6_0201">
  <fileHeader companyName="Unbekannt" productName="Unbenannt" productVersion="1" creationDateTime="2019-09-10T12:35:30"/>
  <contentHeader name="Unbenannt" modificationDateTime="2019-09-11T20:44:25">
    <coordinateInfo>
      <fbd>
        <scaling x="10" y="10"/>
      </fbd>
      <ld>
        <scaling x="10" y="10"/>
      </ld>
      <sfc>
        <scaling x="10" y="10"/>
      </sfc>
    </coordinateInfo>
  </contentHeader>
  <types>
    <dataTypes>
      <dataType name="REAL2">
        <baseType>
          <struct>
            <variable name="R1">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="RX">
              <type>
                <REAL/>
              </type>
            </variable>
          </struct>
        </baseType>
      </dataType>
    </dataTypes>
    <pous>
      <pou name="FT_TN8" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="IN">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="_T">
              <type>
                <TIME/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="OUT">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="TRIG">
              <type>
                <BOOL/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="length">
              <type>
                <INT/>
              </type>
              <initialValue>
                <simpleValue value="8"/>
              </initialValue>
            </variable>
            <variable name="X">
              <type>
                <array>
                  <dimension lower="0" upper="7"/>
                  <baseType>
                    <REAL/>
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="cnt">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="last">
              <type>
                <TIME/>
              </type>
            </variable>
            <variable name="tx">
              <type>
                <TIME/>
              </type>
            </variable>
            <variable name="init">
              <type>
                <BOOL/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[tx:= UDINT_TO_TIME(T_PLC_MS(en:=true));

trig := FALSE;
IF NOT init THEN
	x[cnt] := in;
	init := TRUE;
	last := tx;
ELSIF tx - last >= _T / length THEN
	IF cnt = length - 1 THEN cnt := 0; ELSE cnt := cnt + 1; END_IF;
	Out := X[cnt];
	x[cnt] := in;
	last := tx;
	trig := TRUE;
END_IF;



(* From OSCAT Library, www.oscat.de *)
(* T_PLC_MS required *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[FT_TN8 is delay function]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="FT_TN64" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="IN">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="_T">
              <type>
                <TIME/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="OUT">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="TRIG">
              <type>
                <BOOL/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="length">
              <type>
                <INT/>
              </type>
              <initialValue>
                <simpleValue value="64"/>
              </initialValue>
            </variable>
            <variable name="X">
              <type>
                <array>
                  <dimension lower="0" upper="63"/>
                  <baseType>
                    <REAL/>
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="cnt">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="last">
              <type>
                <TIME/>
              </type>
            </variable>
            <variable name="tx">
              <type>
                <TIME/>
              </type>
            </variable>
            <variable name="init">
              <type>
                <BOOL/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[tx:= UDINT_TO_TIME(T_PLC_MS(en:=true));

trig := FALSE;
IF NOT init THEN
	x[cnt] := in;
	init := TRUE;
	last := tx;
ELSIF tx - last >= _T / length THEN
	IF cnt = length - 1 THEN cnt := 0; ELSE cnt := cnt + 1; END_IF;
	Out := X[cnt];
	x[cnt] := in;
	last := tx;
	trig := TRUE;
END_IF;


(* From OSCAT Library, www.oscat.de *)
(* T_PLC_MS required *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[FT_TN64 is delay function]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="FT_PIW" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="IN">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="KP">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="1.0"/>
              </initialValue>
            </variable>
            <variable name="KI">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="1.0"/>
              </initialValue>
            </variable>
            <variable name="LIM_L">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="-1.0e38"/>
              </initialValue>
            </variable>
            <variable name="LIM_H">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="1.0e38"/>
              </initialValue>
            </variable>
            <variable name="RST">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Y">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="LIM">
              <type>
                <BOOL/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="integ">
              <type>
                <derived name="FT_INT"/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[(* run integrator *)
integ(IN := IN, K := KI, RUN := NOT LIM, RST := RST);

(* set output value *)
Y := KP * IN + integ.Out;

(* check for limits *)
IF Y < LIM_L THEN
	Y := LIM_L;
	LIM := TRUE;
ELSIF Y > LIM_H THEN
	Y := LIM_H;
	LIM := TRUE;
ELSE
	LIM := FALSE;
END_IF;


(* From OSCAT Library, www.oscat.de *)
(* FT_INT required *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[<pou name="FT_PID" pouType="functionBlock">]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="FT_PIDW" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="IN">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="KP">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="1.0"/>
              </initialValue>
            </variable>
            <variable name="TN">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="1.0"/>
              </initialValue>
            </variable>
            <variable name="TV">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="1.0"/>
              </initialValue>
            </variable>
            <variable name="LIM_L">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="-1.0e38"/>
              </initialValue>
            </variable>
            <variable name="LIM_H">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="1.0e38"/>
              </initialValue>
            </variable>
            <variable name="RST">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Y">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="LIM">
              <type>
                <BOOL/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="integ">
              <type>
                <derived name="INTEGRATE"/>
              </type>
            </variable>
            <variable name="diff">
              <type>
                <derived name="FT_DERIV"/>
              </type>
            </variable>
            <variable name="YI">
              <type>
                <REAL/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[(* run the integrator *)
IF tn = 0.0 OR rst THEN
	integ(_E := FALSE, Y := YI);
	YI := integ.Y;
	YI := 0.0;
ELSE
	integ(X := IN, K := 1.0 / TN, _E := NOT LIM, Y := YI);
	YI := integ.Y;
END_IF;

(* add up integrator and linear part *)
Y := KP * (IN + YI);

(* run differentiator *)
diff(IN := IN, K := TV);

(* set lim before differentiator is added to stop integrator if necessary *)
IF Y > LIM_L AND Y < LIM_H THEN
	LIM := FALSE;
ELSE
	LIM := TRUE;
END_IF;

(* add differential part and limit output Y *)

Y := LIMIT(LIM_L, Y + KP * diff.out, LIM_H);



(* From OSCAT Library, www.oscat.de *)
(* FT_INT,FT_DERIV required *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[<pou name="FT_PID" pouType="functionBlock">]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="FT_PID" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="IN">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="KP">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="1.0"/>
              </initialValue>
            </variable>
            <variable name="TN">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="1.0"/>
              </initialValue>
            </variable>
            <variable name="TV">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="1.0"/>
              </initialValue>
            </variable>
            <variable name="ILIM_L">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="-1.0e38"/>
              </initialValue>
            </variable>
            <variable name="ILIM_H">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="1.0e38"/>
              </initialValue>
            </variable>
            <variable name="IEN">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="TRUE"/>
              </initialValue>
            </variable>
            <variable name="RST">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Y">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="LIM">
              <type>
                <BOOL/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="integ">
              <type>
                <derived name="FT_INT"/>
              </type>
            </variable>
            <variable name="diff">
              <type>
                <derived name="FT_DERIV"/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[(* run integrator only if TN > 0 *)
IF TN > 0.0 THEN
	integ(IN := IN, K := 1.0 / TN, RUN := IEN, RST := RST, OUT_MIN := ILIM_L, OUT_MAX := ILIM_H);
ELSE
	integ(RST := FALSE);
END_IF;

(* run differentiator *)
diff(IN := IN, K := TV);

(* combine both values *)
Y := KP * (integ.Out + diff.out + IN);

(* check if integrator has reached its limits and set overflow *)
LIM := integ.LIM;


(* From OSCAT Library, www.oscat.de *)
(* FT_INT,FT_DERIV required *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[FT_PDI is a PID controller]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="FT_INT2" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="IN">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="K">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="1.0"/>
              </initialValue>
            </variable>
            <variable name="RUN">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="TRUE"/>
              </initialValue>
            </variable>
            <variable name="RST">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="OUT_MIN">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="-1.0E-37"/>
              </initialValue>
            </variable>
            <variable name="OUT_MAX">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="1.0E37"/>
              </initialValue>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="OUT">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="LIM">
              <type>
                <BOOL/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="INTEG">
              <type>
                <derived name="INTEGRATE"/>
              </type>
            </variable>
            <variable name="ix">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="val">
              <type>
                <derived name="REAL2"/>
              </type>
            </variable>
            <variable name="_R2_ADD">
              <type>
                <derived name="R2_ADD"/>
              </type>
            </variable>
            <variable name="_R2_SET">
              <type>
                <derived name="R2_SET"/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF RST THEN
	_R2_SET(X:=0.0);
	val:=_R2_SET._R2_SET;
	out := 0.0;
ELSE
	integ(X := IN, _E := RUN, K := K, Y := ix);
	ix := integ.Y;
	_R2_ADD(X:=val,Y:=ix);
	val:=_R2_ADD._R2_ADD;
	ix := 0.0;
	OUT := val.RX;
END_IF;

(* check output for limits *)
IF out > OUT_MIN AND out < OUT_MAX THEN
	LIM := FALSE;
ELSE
	OUT := LIMIT(OUT_MIN, OUT, OUT_MAX);
	_R2_SET(X:=OUT);
	val:=_R2_SET._R2_SET;
	LIM := TRUE;
END_IF;


(* From OSCAT Library, www.oscat.de *)
(* INTEGRATE required *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[FT_int2 is an integrator with input IN and factor K.]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="R2_ADD" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="X">
              <type>
                <derived name="REAL2"/>
              </type>
            </variable>
            <variable name="Y">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="_R2_ADD">
              <type>
                <derived name="REAL2"/>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="temp">
              <type>
                <REAL/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[temp := X.RX;
_R2_ADD.RX := Y + X.R1 + X.RX;
_R2_ADD.R1 := temp - _R2_ADD.RX + Y + X.R1;

(* From OSCAT Library, www.oscat.de *)
(* Datatype REAL2 required *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[R2_add adds a real to a double real which extends the accuracy of a real to twice as many digits]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="R2_SET" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="X">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="_R2_SET">
              <type>
                <derived name="REAL2"/>
              </type>
            </variable>
          </outputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[_R2_SET.RX := X;
_R2_SET.R1 := 0.0;

(* From OSCAT Library, www.oscat.de *)
(* Datatype REAL2 required *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[R2_set sets a double precision real to a single real value]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="TP_X" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="IN">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="PT">
              <type>
                <TIME/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Q">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="ET">
              <type>
                <TIME/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="edge">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="start">
              <type>
                <TIME/>
              </type>
            </variable>
            <variable name="tx">
              <type>
                <TIME/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[tx := UDINT_TO_TIME(T_PLC_MS(en:=true));

(* rising edge trigger *)
IF IN AND NOT edge THEN
	start := tx;
	Q := PT > t#0ms;
ELSIF Q THEN
	ET := tx - start;
	IF ET >= PT THEN
		Q := FALSE;
		ET := t#0ms;
	END_IF;
END_IF;
edge := IN;

(*From OSCAT Library, www.oscat.de *)
(* T_PLC_MS required *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[retriggerable edge triggered pulse similar to TP but with a retrigger nfunction]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="CLK_PRG" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="PT">
              <type>
                <TIME/>
              </type>
              <initialValue>
                <simpleValue value="T#10ms"/>
              </initialValue>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Q">
              <type>
                <BOOL/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="init">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
            </variable>
            <variable name="last">
              <type>
                <TIME/>
              </type>
            </variable>
            <variable name="tx">
              <type>
                <TIME/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[
tx:= UDINT_TO_TIME(T_PLC_MS(en:=true));

(* initialize on startup *)
IF NOT init THEN
	init := TRUE;
	last := tx - pt;
END_IF;

(* generate output pulse when next_pulse is reached *)
Q := tx - last >= pt;
IF Q THEN last := tx; END_IF;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[clk_prg uses the internal sps time to generate a clock with programmable period time.the period time is defined for 10ms .. 65s]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="PWM_DC" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="F">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="DC">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Q">
              <type>
                <BOOL/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="clk">
              <type>
                <derived name="CLK_PRG"/>
              </type>
            </variable>
            <variable name="pulse">
              <type>
                <derived name="TP_X"/>
              </type>
            </variable>
            <variable name="tmp">
              <type>
                <REAL/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF F > 0.0 THEN
	tmp := 1000.0/F;
	CLK(PT := REAL_TO_TIME(tmp));
	Pulse(in := clk.Q, pt := REAL_TO_TIME(tmp*DC));
	Q := pulse.Q;
END_IF;

(* From OSCAT Library, www.oscat.de *)
(* T_PLC_MS, CLK_PRG, TP_X required*)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this signal generator generates a square wave signal which is specified by the frequency and the duty cycle]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="FT_PIDWL" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="IN">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="KP">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="1.0"/>
              </initialValue>
            </variable>
            <variable name="TN">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="1.0"/>
              </initialValue>
            </variable>
            <variable name="TV">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="1.0"/>
              </initialValue>
            </variable>
            <variable name="LIM_L">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="-1.0E38"/>
              </initialValue>
            </variable>
            <variable name="LIM_H">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="1.0E38"/>
              </initialValue>
            </variable>
            <variable name="RST">
              <type>
                <BOOL/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Y">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="LIM">
              <type>
                <BOOL/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="piwl">
              <type>
                <derived name="FT_PIWL"/>
              </type>
            </variable>
            <variable name="diff">
              <type>
                <derived name="FT_DERIV"/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF rst THEN
	piwl(rst := TRUE);
	piwl.RST := FALSE;
ELSE
	(* run PIWL controller first *)
	(* we need to check if TN = 0 and do alternative calls *)
	IF TN = 0.0 THEN
		piwl(in := IN * KP, KP := 1.0, KI := 0.0, LIM_L := LIM_L, LIM_H := LIM_H);
	ELSE
		piwl(in := IN * KP, KP := 1.0, KI := 1.0 / TN, LIM_L := LIM_L, LIM_H := LIM_H);
	END_IF;

	(* run differentiator and add_to_output *)
	diff(IN := IN, K := KP * TV);
	Y := piwl.Y + diff.out;

	(* limit the output *)
	IF Y < LIM_L THEN
		LIM := TRUE;
		Y := LIM_L;
	ELSIF Y > LIM_H THEN
		LIM := TRUE;
		Y := LIM_H;
	ELSE
		LIM := FALSE;
	END_IF;
END_IF;



(* From OSCAT Library, www.oscat.de *)
(* T_PLC_US, FT_DERIV required *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[FT_PIWL is a PI controller]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="CTRL_PID" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="ACT">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="SET">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="SUP">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="OFS">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="M_I">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="MAN">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="RST">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
            </variable>
            <variable name="KP">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="1.0"/>
              </initialValue>
            </variable>
            <variable name="TN">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="1.0"/>
              </initialValue>
            </variable>
            <variable name="TV">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="1.0"/>
              </initialValue>
            </variable>
            <variable name="LL">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="-1000.0"/>
              </initialValue>
            </variable>
            <variable name="LH">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="1000.0"/>
              </initialValue>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Y">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="DIFF">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="LIM">
              <type>
                <BOOL/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="_pid">
              <type>
                <derived name="FT_PIDWL"/>
              </type>
            </variable>
            <variable name="co">
              <type>
                <derived name="CTRL_OUT"/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[DIFF := CTRL_IN(SET, ACT, SUP);
_pid(in := DIFF, kp := KP, tn := TN, tv := TV, lim_l := LL, lim_h := LH, rst := RST);
co(ci := _pid.Y, OFFSET := OFS, man_in := M_I, lim_l := LL, lim_h := LH, manual := MAN);
Y := co.Y;
LIM := co.LIM;


(* From OSCAT Library, www.oscat.de *)
(* CTRL_IN, FT_PIDWL, CTRL_out reauired *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[FT_PID is a PID controller with manual functionality]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="T_PLC_US" pouType="function">
        <interface>
          <returnType>
            <UDINT/>
          </returnType>
          <localVars>
            <variable name="tx">
              <type>
                <UDINT/>
              </type>
            </variable>
          </localVars>
          <inputVars>
            <variable name="debug">
              <type>
                <BOOL/>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="N">
              <type>
                <INT/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
            </variable>
            <variable name="offset">
              <type>
                <UDINT/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
            </variable>
            <variable name="temp">
              <type>
                <DWORD/>
              </type>
              <initialValue>
                <simpleValue value="1"/>
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[{extern unsigned long __tick;
extern unsigned long long common_ticktime__;
unsigned long long ticktime_ms = (common_ticktime__)/1000000;
UDINT plc_time = (UDINT)(ticktime_ms * (unsigned long long)__tick);
TX = plc_time}

T_PLC_US := tx*1000;
IF debug THEN
	T_PLC_US := (DWORD_TO_UDINT(SHL(UDINT_TO_DWORD(T_PLC_US),N) OR SHL(temp,N))-1) + OFFSET;
END_IF;

(* Original Code:
tx := TIME();
T_PLC_US := TIME_TO_DWORD(Tx)*1000;
IF debug THEN
	T_PLC_US := (SHL(T_PLC_US,N) OR SHL(DWORD#1,N)-1) + OFFSET;
END_IF;
*)

(* From OSCAT library, www.oscat.de

this is a temporary T_PLC_US FB until OpenPLC gets it´s own time() functionality *)

(* PLC_TIME and Global variables PLC_SCAN_CYCL and PLC_CYCL_TIME required *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[Output current execution time in microseconds]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="CONTROL_SET12" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="KS">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="TU">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="TG">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="_PI">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="_PID">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="P_K">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="1.0"/>
              </initialValue>
            </variable>
            <variable name="PI_K">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.9"/>
              </initialValue>
            </variable>
            <variable name="PI_TN">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="3.33"/>
              </initialValue>
            </variable>
            <variable name="PID_K">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="1.2"/>
              </initialValue>
            </variable>
            <variable name="PID_TN">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="2.0"/>
              </initialValue>
            </variable>
            <variable name="PID_TV">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.5"/>
              </initialValue>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="KP">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="TN">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="TV">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="KI">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="KD">
              <type>
                <REAL/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="TX">
              <type>
                <REAL/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF TU > 0.0 AND KS > 0.0 THEN TX := TG / TU / KS; END_IF;
IF _pi AND _PID THEN
	KP := 0.0;
	TN := 0.0;
	TV := 0.0;
ELSIF _PID THEN
	KP := PID_K * TX;
	TN := PID_TN * TU;
	TV := PID_TV * TU;
ELSIF _PI THEN
	KP := PI_K * TX;
	TN := PI_TN * TU;
ELSE
	KP := P_K * TX;
END_IF;

(* KI and KD are calculated *)
IF TN > 0.0 THEN KI := KP / TN; ELSE KI := 0.0; END_IF;
KD := KP * TV;


(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[takahashi calculates controller parameters for P, PI and PID controllers based on the ziegler nichols method.]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="T_PLC_MS" pouType="function">
        <interface>
          <returnType>
            <UDINT/>
          </returnType>
          <localVars>
            <variable name="tx">
              <type>
                <UDINT/>
              </type>
            </variable>
          </localVars>
          <inputVars>
            <variable name="debug">
              <type>
                <BOOL/>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="N">
              <type>
                <INT/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
            </variable>
            <variable name="offset">
              <type>
                <UDINT/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
            </variable>
            <variable name="temp">
              <type>
                <DWORD/>
              </type>
              <initialValue>
                <simpleValue value="1"/>
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[tx := 0;

{extern unsigned long __tick;
extern unsigned long long common_ticktime__;
unsigned long long ticktime_ms = (common_ticktime__)/1000000;
UDINT plc_time = (UDINT)(ticktime_ms * (unsigned long long)__tick);
TX = plc_time}

T_PLC_MS := tx;
IF debug THEN
	T_PLC_MS := (DWORD_TO_UDINT(SHL(UDINT_TO_DWORD(T_PLC_MS),N) OR SHL(temp,N))-1) + OFFSET;
END_IF;

(* Original Code:
tx := TIME();
T_PLC_MS := TIME_TO_DWORD(Tx);
IF debug THEN
	T_PLC_MS := (SHL(T_PLC_MS,N) OR SHL(DWORD#1,N)-1) + OFFSET;
END_IF;
*)

(* From OSCAT library, www.oscat.de

this is a temporary T_PLC_MS FB until OpenPLC gets it´s own time() functionality *)

(* PLC_TIME and Global variables PLC_SCAN_CYCL and PLC_CYCL_TIME required *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[Output current execution time in miliseconds]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="program0" pouType="program">
        <interface>
          <localVars>
            <variable name="LocalVar0">
              <type>
                <DINT/>
              </type>
            </variable>
            <variable name="LocalVar1">
              <type>
                <DINT/>
              </type>
            </variable>
            <variable name="LocalVar2">
              <type>
                <DINT/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <FBD>
            <block localId="1" typeName="ADD" executionOrderId="0" height="60" width="70">
              <position x="600" y="160"/>
              <inputVariables>
                <variable formalParameter="IN1">
                  <connectionPointIn>
                    <relPosition x="0" y="30"/>
                    <connection refLocalId="2">
                      <position x="600" y="190"/>
                      <position x="575" y="190"/>
                      <position x="575" y="170"/>
                      <position x="550" y="170"/>
                    </connection>
                  </connectionPointIn>
                </variable>
                <variable formalParameter="IN2">
                  <connectionPointIn>
                    <relPosition x="0" y="50"/>
                    <connection refLocalId="3">
                      <position x="600" y="210"/>
                      <position x="550" y="210"/>
                    </connection>
                  </connectionPointIn>
                </variable>
              </inputVariables>
              <inOutVariables/>
              <outputVariables>
                <variable formalParameter="OUT">
                  <connectionPointOut>
                    <relPosition x="70" y="30"/>
                  </connectionPointOut>
                </variable>
              </outputVariables>
            </block>
            <inVariable localId="2" executionOrderId="0" height="30" width="90" negated="false">
              <position x="460" y="160"/>
              <connectionPointOut>
                <relPosition x="90" y="10"/>
              </connectionPointOut>
              <expression>LocalVar0</expression>
            </inVariable>
            <inVariable localId="3" executionOrderId="0" height="30" width="90" negated="false">
              <position x="460" y="190"/>
              <connectionPointOut>
                <relPosition x="90" y="20"/>
              </connectionPointOut>
              <expression>LocalVar1</expression>
            </inVariable>
            <outVariable localId="4" executionOrderId="0" height="30" width="90" negated="false">
              <position x="710" y="170"/>
              <connectionPointIn>
                <relPosition x="0" y="20"/>
                <connection refLocalId="1" formalParameter="OUT">
                  <position x="710" y="190"/>
                  <position x="670" y="190"/>
                </connection>
              </connectionPointIn>
              <expression>LocalVar2</expression>
            </outVariable>
          </FBD>
        </body>
      </pou>
      <pou name="INTEGRATE" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="_E">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="TRUE"/>
              </initialValue>
            </variable>
            <variable name="X">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="K">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="1.0"/>
              </initialValue>
            </variable>
          </inputVars>
          <inOutVars>
            <variable name="Y">
              <type>
                <REAL/>
              </type>
            </variable>
          </inOutVars>
          <localVars>
            <variable name="x_last">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="init">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="last">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="tx">
              <type>
                <UDINT/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[tx:= T_PLC_MS(en:=true);

IF NOT init THEN
	init := TRUE;
	X_last := X;
ELSIF _E THEN
	Y := (X + X_LAST) * 0.5E-3 * UDINT_TO_REAL(tx-last) * K + Y;
	X_last := X;
END_IF;
last := tx;

(* From OSCAT Library, www.oscat.de *)
(* T_PLC_MS required *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[integrate is a plain integrator with I/O for out]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="BAND_B" pouType="function">
        <interface>
          <returnType>
            <BYTE/>
          </returnType>
          <inputVars>
            <variable name="X">
              <type>
                <BYTE/>
              </type>
            </variable>
            <variable name="B">
              <type>
                <BYTE/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF X < B THEN
	BAND_B := BYTE#0;
ELSIF X > USINT_TO_BYTE(USINT#255 - BYTE_TO_USINT(B)) THEN
	BAND_B := BYTE#255;
ELSE
	BAND_B := X;
END_IF;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[BAND_B will limit X to B ]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="CONTROL_SET1" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="KT">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="TT">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="_PI">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="_PID">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="P_K">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.5"/>
              </initialValue>
            </variable>
            <variable name="PI_K">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.45"/>
              </initialValue>
            </variable>
            <variable name="PI_TN">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.83"/>
              </initialValue>
            </variable>
            <variable name="PID_K">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.6"/>
              </initialValue>
            </variable>
            <variable name="PID_TN">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.5"/>
              </initialValue>
            </variable>
            <variable name="PID_TV">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.125"/>
              </initialValue>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="KP">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="TN">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="TV">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="KI">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="KD">
              <type>
                <REAL/>
              </type>
            </variable>
          </outputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF _PI AND _PID THEN
	KP := 0.0;
	TN := 0.0;
	TV := 0.0;
ELSIF _PID THEN
	KP := PID_K * Kt;
	TN := PID_TN * Tt;
	TV := PID_TV * Tt;
ELSIF _PI THEN
	KP := PI_K * Kt;
	TN := PI_TN * Tt;
ELSE
	KP := P_K * Kt;
END_IF;

(* KI and KD are calculated *)
IF tn > 0.0 THEN KI := KP / TN; ELSE KI := 0.0; END_IF;
KD := KP * TV;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[takahashi calculates controller parameters for P, PI and PID controllers based on the ziegler nichols method.]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="CTRL_IN" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="SET_POINT">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="ACTUAL">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="NOISE">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[CTRL_IN := DEAD_ZONE(SET_POINT - ACTUAL, NOISE);

(* From OSCAT Library, www.oscat.de *)
(* DEAD_ZONE required *)]]></xhtml:p>
          </ST>
        </body>
      </pou>
      <pou name="DEAD_ZONE" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="X">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="L">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF ABS(x) > L THEN
	dead_zone := X;
ELSE
	DEAD_ZONE := 0.0;
END_IF;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[dead_zone2 is a linear transfer function which follows a linear function except for x is close to 0.]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="CTRL_OUT" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="CI">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="OFFSET">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="MAN_IN">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="LIM_L">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="LIM_H">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="MANUAL">
              <type>
                <BOOL/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Y">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="LIM">
              <type>
                <BOOL/>
              </type>
            </variable>
          </outputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[Y := SEL(manual, CI, MAN_IN) + OFFSET;

(* Limit the output *)
IF Y >= LIM_H THEN
	Y := LIM_H;
	LIM := TRUE;
ELSIF Y <= lim_L THEN
	Y := LIM_L;
	LIM := TRUE;
ELSE
	LIM := FALSE;
END_IF;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
      </pou>
      <pou name="CTRL_PI" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="ACT">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="SET">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="SUP">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="OFS">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="M_I">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="MAN">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="RST">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
            </variable>
            <variable name="KP">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="1.0"/>
              </initialValue>
            </variable>
            <variable name="KI">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="1.0"/>
              </initialValue>
            </variable>
            <variable name="LL">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="-1000.0"/>
              </initialValue>
            </variable>
            <variable name="LH">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="1000.0"/>
              </initialValue>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Y">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="DIFF">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="LIM">
              <type>
                <BOOL/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="pi">
              <type>
                <derived name="FT_PIWL"/>
              </type>
            </variable>
            <variable name="co">
              <type>
                <derived name="CTRL_OUT"/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[DIFF := CTRL_IN(SET, ACT, SUP);
pi(in := DIFF, kp := KP, ki := KI, lim_l := LL, lim_h := LH, rst := RST);
co(ci := pi.Y, OFFSET := OFS, man_in := M_I, lim_l := LL, lim_h := LH, manual := MAN);
Y := co.Y;
LIM := co.LIM;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[FT_PI is a PI controller with manual functionality]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="FT_PIWL" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="IN">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="KP">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="1.0"/>
              </initialValue>
            </variable>
            <variable name="KI">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="1.0"/>
              </initialValue>
            </variable>
            <variable name="LIM_L">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="-1.0E38"/>
              </initialValue>
            </variable>
            <variable name="LIM_H">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="1.0E38"/>
              </initialValue>
            </variable>
            <variable name="RST">
              <type>
                <BOOL/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Y">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="LIM">
              <type>
                <BOOL/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="init">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="tx">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="tc">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="t_last">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="in_last">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="i">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="p">
              <type>
                <REAL/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF NOT init OR RST THEN
	init := TRUE;
	in_last := in;
		t_last := T_PLC_US(en:=true);
	i := 0.0;
	tc := 0.0;
ELSE
	(* read last cycle time in Microseconds *)
		tx := T_PLC_US(en:=true);
	tc := UDINT_TO_REAL(tx - t_last);
	t_last := tx;

	(* calculate proportional part *)
	p := KP * IN;

	(* run integrator *)
	i := (IN + in_last) * 5.0E-7 * KI * tc + i;
	in_last := IN;

	(* calculate output Y *)
	Y := p + i;

	(* check output for limits *)
	IF Y >= LIM_H THEN
		Y := LIM_H;
		IF ki <> 0.0 THEN
			i := LIM_H - p;
		ELSE
			i := 0.0;
		END_IF;
		LIM := TRUE;
	ELSIF Y <= LIM_L THEN
		Y := LIM_L;
		IF ki <> 0.0 THEN
			i := LIM_L - p;
		ELSE
			i := 0.0;
		END_IF;
		LIM := TRUE;
	ELSE
		LIM := FALSE;
	END_IF;
END_IF;

(* From OSCAT Library, www.oscat.de *)
(* T_PLC_US required *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[FT_PIWL is a PI controller]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="FT_DERIV" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="IN">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="K">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="1.0"/>
              </initialValue>
            </variable>
            <variable name="RUN">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="TRUE"/>
              </initialValue>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="OUT">
              <type>
                <REAL/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="old">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="tx">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="last">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="init">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="tc">
              <type>
                <REAL/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[tx:= T_PLC_US(en:=true);
tc := UDINT_TO_REAL(tx - last);

(* init on firsat startup *)
IF NOT init THEN
	init := TRUE;
	old := in;
ELSIF run AND tc > 0.0 THEN
	out := (in - old) / tc * 1000000.0 * K;
	old := in;
ELSE
	out := 0.0;
END_IF;

last := tx;

(* From OSCAT Library, www.oscat.de *)
(* T_PLC_US, required *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[FT_deriv calculates the derivate over the signal "in" with Faktor "K"]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="CTRL_PWM" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="CI">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="MAN_IN">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="MANUAL">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="F">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Q">
              <type>
                <BOOL/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="PW">
              <type>
                <derived name="PWM_DC"/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[PW(F := F, DC := SEL(MANUAL,CI,MAN_IN));
Q := PW.Q;

(* From OSCAT Library, www.oscat.de *)
(* PWM_DC required*)]]></xhtml:p>
          </ST>
        </body>
      </pou>
      <pou name="DEAD_BAND" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="X">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="L">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF X > L THEN
	DEAD_BAND := X - L;
ELSIF X < -L THEN
	DEAD_BAND := X + L;
ELSE
	DEAD_BAND := 0.0;
END_IF;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[DEAD_BAND ist eine lineare Übertragungsfunktion mit Totzone]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="DEAD_BAND_A" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="X">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="_T">
              <type>
                <TIME/>
              </type>
            </variable>
            <variable name="KL">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="1.0"/>
              </initialValue>
            </variable>
            <variable name="LM">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Y">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="L">
              <type>
                <REAL/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="tp1">
              <type>
                <derived name="FT_PT1"/>
              </type>
            </variable>
            <variable name="tp2">
              <type>
                <derived name="FT_PT1"/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[(* filter the input signal *)
tp1(in := X, _T:= _T);

(* filter the HF portion to generate a stable L *)
tp2(in := ABS(tp1.out - X), _T := MULTIME(_T, 4.0));

(* now we determine L which is half the width of the dead band *)
L := MIN(KL * tp2.out, LM);

IF X > L THEN
	Y := X - L;
ELSIF X < -L THEN
	Y := X + L;
ELSE
	Y := 0.0;
END_IF;
]]></xhtml:p>
          </ST>
        </body>
      </pou>
      <pou name="FT_PT1" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="IN">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="_T">
              <type>
                <TIME/>
              </type>
            </variable>
            <variable name="K">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="1.0"/>
              </initialValue>
            </variable>
            <variable name="OUT">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="last">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="tx">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="init">
              <type>
                <BOOL/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[tx:= T_PLC_US(en:=true);

(* startup initialisation *)
IF NOT init OR _T = t#0s THEN
	init := TRUE;
	out := K * in;
ELSE
	out := out + (in * K - out) * UDINT_TO_REAL(Tx - last) / TIME_TO_REAL(_T) * 1.0E-3;
	IF ABS(out) < 1.0E-20 THEN out := 0.0; END_IF;
END_IF;
last := tx;

(* From OSCAT Library, www.oscat.de *)
(* T_PLC_US required *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[FT_PT1 is an low pass filter with a programmable time T and faktor K]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="DEAD_ZONE2" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="X">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="L">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Y">
              <type>
                <REAL/>
              </type>
            </variable>
          </outputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF ABS(x) > L THEN
	Y := X;
ELSIF Y > 0.0 THEN
	Y := L;
ELSE
	Y := -L;
END_IF;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[dead_zone2 is a linear transfer function which follows a linear function except for x is close to 0]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="FT_IMP" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="IN">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="_T">
              <type>
                <TIME/>
              </type>
            </variable>
            <variable name="K">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="1.0"/>
              </initialValue>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="OUT">
              <type>
                <REAL/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="t1">
              <type>
                <derived name="FT_PT1"/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[T1(in:= in, _T:=_T);
out := (in - t1.out) * K;

(* From OSCAT Library, www.oscat.de *)
(* FT_PT1 required *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[FT_IMP is 	an impulse filter (high pass filter)]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="FT_INT" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="IN">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="K">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="1.0"/>
              </initialValue>
            </variable>
            <variable name="RUN">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="TRUE"/>
              </initialValue>
            </variable>
            <variable name="RST">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="OUT_MIN">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="-1.0E-37"/>
              </initialValue>
            </variable>
            <variable name="OUT_MAX">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="1.0E-37"/>
              </initialValue>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="OUT">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="LIM">
              <type>
                <BOOL/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="INTEG">
              <type>
                <derived name="INTEGRATE"/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF rst THEN
	out := 0.0;
ELSE
	integ(X := IN, _E := RUN, K := K, Y := out);
	out := integ.Y;
END_IF;

(* limit the outputs *)
IF out >= OUT_MAX THEN
	out := out_max;
	LIM := TRUE;
ELSIF out <= out_min THEN
	out := out_min;
	lim := TRUE;
ELSE
	lim := FALSE;
END_IF;

(* From OSCAT Library, www.oscat.de *)
(* INTEGRATE required *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[FT_int is an integrator with input IN and factor K.]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="FT_PD" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="IN">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="KP">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="1.0"/>
              </initialValue>
            </variable>
            <variable name="TV">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="1.0"/>
              </initialValue>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Y">
              <type>
                <REAL/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="diff">
              <type>
                <derived name="FT_DERIV"/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[(* run differentiator *)
diff(IN := IN, K := TV);

(* combine both values *)
Y := KP * (diff.out + IN);

(* From OSCAT Library, www.oscat.de *)
(* FT_DERIV required *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[FT_PD is a PD controller]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="FT_PDT1" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="IN">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="KP">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="1.0"/>
              </initialValue>
            </variable>
            <variable name="TV">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="1.0"/>
              </initialValue>
            </variable>
            <variable name="T1">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="1.0"/>
              </initialValue>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Y">
              <type>
                <REAL/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="diff">
              <type>
                <derived name="FT_DERIV"/>
              </type>
            </variable>
            <variable name="_TP">
              <type>
                <derived name="FT_PT1"/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[(* run differentiator *)
diff(IN := IN, K := TV);

(* Run PT1 filter *)
_tp(in := diff.out, _T := REAL_TO_TIME(T1));

(* combine both values *)
Y := KP * (_tp.out + IN);

(* From OSCAT Library, www.oscat.de *)
(* T_PLC_US required *)]]></xhtml:p>
          </ST>
        </body>
      </pou>
      <pou name="FT_PI" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="IN">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="KP">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="1.0"/>
              </initialValue>
            </variable>
            <variable name="KI">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="1.0"/>
              </initialValue>
            </variable>
            <variable name="ILIM_L">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="-1.0e38"/>
              </initialValue>
            </variable>
            <variable name="ILIM_H">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="1.0e38"/>
              </initialValue>
            </variable>
            <variable name="IEN">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="TRUE"/>
              </initialValue>
            </variable>
            <variable name="RST">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Y">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="LIM">
              <type>
                <BOOL/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="integ">
              <type>
                <derived name="FT_INT"/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[(* run integrator *)
integ(IN := IN, K := KI, RUN := IEN, RST := RST, OUT_MIN := ILIM_L, OUT_MAX := ILIM_H);
(* check if integrator has reached its limits and set overflow *)
LIM := integ.LIM;
Y := KP * IN + integ.Out;

(* From OSCAT Library, www.oscat.de *)
(* FT_INT required *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[FT_PI is a PI controller]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="FT_PT2" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="IN">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="_T">
              <type>
                <TIME/>
              </type>
            </variable>
            <variable name="_D">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="K">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="1.0"/>
              </initialValue>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="OUT">
              <type>
                <REAL/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="init">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="int1">
              <type>
                <derived name="INTEGRATE"/>
              </type>
            </variable>
            <variable name="int2">
              <type>
                <derived name="INTEGRATE"/>
              </type>
            </variable>
            <variable name="tn">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="I1">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="I2">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="tn2">
              <type>
                <REAL/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[(* startup initialisation *)
IF NOT init OR _T = T#0s THEN
	init := TRUE;
	out := K * in;
	I2 := out;
ELSE
	TN := TIME_TO_REAL(_T) / 1000.0;
	tn2 := TN * TN;
	int1(X := in * K / tn2 - I1 * 0.5 * _D / TN - I2 / TN2, Y := I1);
	I1 := int1.Y;
	int2(X := I1,Y := I2);
	I2 := int2.Y;
	out := I2;
END_IF;

(* From OSCAT Library, www.oscat.de *)
(* INTEGRATE required *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[FT_PT2 is a 2nd grade filter with programmable times T, D and faktor K]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="FT_TN16" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="IN">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="_T">
              <type>
                <TIME/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="OUT">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="TRIG">
              <type>
                <BOOL/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="length">
              <type>
                <INT/>
              </type>
              <initialValue>
                <simpleValue value="16"/>
              </initialValue>
            </variable>
            <variable name="X">
              <type>
                <array>
                  <dimension lower="0" upper="15"/>
                  <baseType>
                    <REAL/>
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="cnt">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="last">
              <type>
                <TIME/>
              </type>
            </variable>
            <variable name="tx">
              <type>
                <TIME/>
              </type>
            </variable>
            <variable name="init">
              <type>
                <BOOL/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[tx:= UDINT_TO_TIME(T_PLC_MS(en:=true));

trig := FALSE;
IF NOT init THEN
	x[cnt] := in;
	init := TRUE;
	last := tx;
ELSIF tx - last >= _T / length THEN
	IF cnt = length - 1 THEN cnt := 0; ELSE cnt := cnt + 1; END_IF;
	Out := X[cnt];
	x[cnt] := in;
	last := tx;
	Trig := TRUE;
END_IF;

(* From OSCAT Library, www.oscat.de *)
(* T_PLC_MS required *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[FT_TN16 is delay function]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="HYST" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="IN">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="_ON">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="OFF">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Q">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="WIN">
              <type>
                <BOOL/>
              </type>
            </variable>
          </outputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF _ON >= OFF THEN
	IF IN < OFF THEN
		Q := FALSE;
		WIN := FALSE;
	ELSIF  IN > _ON THEN
		Q := TRUE;
		WIN := FALSE;
	ELSE
		WIN := TRUE;
	END_IF;
ELSE
	IF IN > OFF THEN
		Q := FALSE;
		WIN := FALSE;
	ELSIF  IN < _ON THEN
		Q := TRUE;
		WIN := FALSE;
	ELSE
		WIN := TRUE;
	END_IF;
END_IF;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[Hystereses function ]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="HYST_1" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="IN">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="HIGH">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="LOW">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Q">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="WIN">
              <type>
                <BOOL/>
              </type>
            </variable>
          </outputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF in < low THEN
	Q := FALSE;
	win := FALSE;
ELSIF in > high THEN
	Q := TRUE;
	win := FALSE;
ELSE
	win := TRUE;
END_IF;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[hysteresis function switches the output high ]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="HYST_2" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="IN">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="VAL">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="HYS">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Q">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="WIN">
              <type>
                <BOOL/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="tmp">
              <type>
                <REAL/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[tmp := val - hys * 0.5;
IF in < tmp THEN
	Q := FALSE;
	win := FALSE;
ELSIF in > tmp + hys THEN
	Q := TRUE;
	win := FALSE;
ELSE
	win := TRUE;
END_IF;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
      </pou>
      <pou name="HYST_3" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="IN">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="_HYST">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="VAL1">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="VAL2">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Q1">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="Q2">
              <type>
                <BOOL/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="X">
              <type>
                <REAL/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[X := _hyst * 0.5;
IF in < val1 - X THEN
	q1 := TRUE;
ELSIF in > val1 + X THEN
	q1 := FALSE;
END_IF;
IF in < val2 - X THEN
	q2 := FALSE;
ELSIF in > val2 + X THEN
	q2 := TRUE;
END_IF;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[double hysteresis function]]></xhtml:p>
        </documentation>
      </pou>
    </pous>
  </types>
  <instances>
    <configurations>
      <configuration name="Config0">
        <resource name="Res0">
          <task name="task0" priority="0" interval="T#20ms">
            <pouInstance name="instance0" typeName="program0"/>
          </task>
        </resource>
      </configuration>
    </configurations>
  </instances>
</project>
