<?xml version='1.0' encoding='utf-8'?>
<project xmlns:ns1="http://www.plcopen.org/xml/tc6_0201" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.plcopen.org/xml/tc6_0201">
  <fileHeader companyName="Unbekannt" productName="Unbenannt" productVersion="1" creationDateTime="2019-09-04T21:33:40"/>
  <contentHeader name="Unbenannt" modificationDateTime="2019-09-04T23:56:50">
    <coordinateInfo>
      <fbd>
        <scaling x="10" y="10"/>
      </fbd>
      <ld>
        <scaling x="10" y="10"/>
      </ld>
      <sfc>
        <scaling x="10" y="10"/>
      </sfc>
    </coordinateInfo>
  </contentHeader>
  <types>
    <dataTypes/>
    <pous>
      <pou name="BIT_OF_DWORD" pouType="function">
        <interface>
          <returnType>
            <BOOL/>
          </returnType>
          <inputVars>
            <variable name="IN">
              <type>
                <DWORD/>
              </type>
            </variable>
            <variable name="N">
              <type>
                <INT/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[BIT_OF_DWORD := (SHR(in,N) AND 16#00000001) > 0;

(* From Oscat Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this function extracts a single bit from the nth position from right (right is lowest bit the lowest Bit (Bit0 from in) is selected with N=.]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="BIT_LOAD_B" pouType="function">
        <interface>
          <returnType>
            <BYTE/>
          </returnType>
          <inputVars>
            <variable name="IN">
              <type>
                <BYTE/>
              </type>
            </variable>
            <variable name="VAL">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="POS">
              <type>
                <INT/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF VAL THEN
	BIT_LOAD_B := in OR SHL(BYTE#1,pos);
ELSE
	BIT_LOAD_B := in AND (NOT SHL(BYTE#1,pos));
END_IF;

(*From OSCAT Library, www.oscat.de*)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this function loads a bit into a byte at position pos.]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="INC" pouType="function">
        <interface>
          <returnType>
            <INT/>
          </returnType>
          <inputVars>
            <variable name="X">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="_D">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="M">
              <type>
                <INT/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[inc := (X + _D + M + 1) MOD (M + 1);
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[This is a increment function which increments the input X by the value D and compares the result with M. if the output exceeds M it will continue to count from 0 again.]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="_BYTE_TO_INT" pouType="function">
        <interface>
          <returnType>
            <INT/>
          </returnType>
          <inputVars>
            <variable name="IN">
              <type>
                <BYTE/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[_BYTE_TO_INT := USINT_TO_INT(BYTE_TO_USINT(IN));

(*From OSCAT Library, www.oscat.de*)]]></xhtml:p>
          </ST>
        </body>
      </pou>
      <pou name="program0" pouType="program">
        <interface>
          <localVars>
            <variable name="LocalVar0">
              <type>
                <DINT/>
              </type>
            </variable>
            <variable name="LocalVar1">
              <type>
                <DINT/>
              </type>
            </variable>
            <variable name="LocalVar2">
              <type>
                <DINT/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <FBD>
            <block localId="1" typeName="ADD" executionOrderId="0" height="60" width="70">
              <position x="460" y="170"/>
              <inputVariables>
                <variable formalParameter="IN1">
                  <connectionPointIn>
                    <relPosition x="0" y="30"/>
                    <connection refLocalId="2">
                      <position x="460" y="200"/>
                      <position x="430" y="200"/>
                      <position x="430" y="190"/>
                      <position x="400" y="190"/>
                    </connection>
                  </connectionPointIn>
                </variable>
                <variable formalParameter="IN2">
                  <connectionPointIn>
                    <relPosition x="0" y="50"/>
                    <connection refLocalId="3">
                      <position x="460" y="220"/>
                      <position x="400" y="220"/>
                    </connection>
                  </connectionPointIn>
                </variable>
              </inputVariables>
              <inOutVariables/>
              <outputVariables>
                <variable formalParameter="OUT">
                  <connectionPointOut>
                    <relPosition x="70" y="30"/>
                  </connectionPointOut>
                </variable>
              </outputVariables>
            </block>
            <inVariable localId="2" executionOrderId="0" height="30" width="90" negated="false">
              <position x="310" y="170"/>
              <connectionPointOut>
                <relPosition x="90" y="20"/>
              </connectionPointOut>
              <expression>LocalVar0</expression>
            </inVariable>
            <inVariable localId="3" executionOrderId="0" height="30" width="90" negated="false">
              <position x="310" y="200"/>
              <connectionPointOut>
                <relPosition x="90" y="20"/>
              </connectionPointOut>
              <expression>LocalVar1</expression>
            </inVariable>
            <outVariable localId="4" executionOrderId="0" height="30" width="90" negated="false">
              <position x="580" y="180"/>
              <connectionPointIn>
                <relPosition x="0" y="20"/>
                <connection refLocalId="1" formalParameter="OUT">
                  <position x="580" y="200"/>
                  <position x="530" y="200"/>
                </connection>
              </connectionPointIn>
              <expression>LocalVar2</expression>
            </outVariable>
          </FBD>
        </body>
      </pou>
      <pou name="COUNT_BR" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="SET">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="IN">
              <type>
                <BYTE/>
              </type>
            </variable>
            <variable name="UP">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="DN">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="_STEP">
              <type>
                <BYTE/>
              </type>
              <initialValue>
                <simpleValue value="1"/>
              </initialValue>
            </variable>
            <variable name="MX">
              <type>
                <BYTE/>
              </type>
              <initialValue>
                <simpleValue value="255"/>
              </initialValue>
            </variable>
            <variable name="RST">
              <type>
                <BOOL/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="CNT">
              <type>
                <BYTE/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="last_up">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="last_dn">
              <type>
                <BOOL/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF rst THEN
	cnt := BYTE#0;
ELSIF set THEN
	cnt := INT_TO_BYTE(LIMIT(0,_BYTE_TO_INT(in),_BYTE_TO_INT(mx)));
ELSIF up AND NOT last_up THEN
	cnt := INT_TO_BYTE(inc(_BYTE_TO_INT(cnt),_BYTE_TO_INT(_step),_BYTE_TO_INT(mx)));
ELSIF dn AND NOT last_dn THEN
	cnt := INT_TO_BYTE(inc(_BYTE_TO_INT(cnt),_BYTE_TO_INT(_step) * -1,_BYTE_TO_INT(mx)));
END_IF;
last_up := up;
last_dn := dn;

(*From OSCAT Library, www.oscat.de *)
(* _BYTE_TO_INT, INC required *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[Count_R is a byte counter with independen up and dn inputs]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="COUNT_DR" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="SET">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="IN">
              <type>
                <DWORD/>
              </type>
            </variable>
            <variable name="UP">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="DN">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="_STEP">
              <type>
                <DWORD/>
              </type>
              <initialValue>
                <simpleValue value="1"/>
              </initialValue>
            </variable>
            <variable name="MX">
              <type>
                <DWORD/>
              </type>
              <initialValue>
                <simpleValue value="16#FFFF_FFFF"/>
              </initialValue>
            </variable>
            <variable name="RST">
              <type>
                <BOOL/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="CNT">
              <type>
                <DWORD/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="CNT2">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="STEP2">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="MX2">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="last_up">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="last_dn">
              <type>
                <BOOL/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[STEP2 := DWORD_TO_UDINT(_STEP);
MX2   := DWORD_TO_UDINT(MX);
CNT2  := DWORD_TO_UDINT(CNT);

IF rst THEN
	CNT2 := UDINT#0;
ELSIF set THEN
	CNT2 := LIMIT(UDINT#0,DWORD_TO_UDINT(in),mx2);
ELSIF up AND NOT last_up THEN
	IF STEP2 > MX2 - CNT2 THEN
		CNT2 := CNT2 - MX2 + STEP2 - UDINT#1;
	ELSE
		CNT2 := CNT2 + STEP2;
	END_IF;
ELSIF dn AND NOT last_dn THEN
	IF STEP2 > CNT2 THEN
		CNT2 := CNT2 - STEP2 + MX2 + UDINT#1;
	ELSE
		CNT2 := CNT2 - STEP2;
	END_IF;
END_IF;
last_up := up;
last_dn := dn;

CNT := UDINT_TO_DWORD(CNT2);

(*From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[Count_DR is a DWORD counter with independen up and dn inputs]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="FF_D2E" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="D0">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="D1">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="CLK">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="RST">
              <type>
                <BOOL/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Q0">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="Q1">
              <type>
                <BOOL/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="edge">
              <type>
                <BOOL/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF rst THEN
	Q0 := FALSE;
	Q1 := FALSE;
ELSIF clk AND NOT edge THEN
	Q0 := D0;
	Q1 := D1;
END_IF;
edge := CLK;

(*From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[dual D-type flip flop with reset and rising clock trigger]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="FF_D4E" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="D0">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="D1">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="D2">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="D3">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="CLK">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="RST">
              <type>
                <BOOL/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Q0">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="Q1">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="Q2">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="Q3">
              <type>
                <BOOL/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="edge">
              <type>
                <BOOL/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF rst THEN
	Q0 := FALSE;
	Q1 := FALSE;
	Q2 := FALSE;
	Q3 := FALSE;
ELSIF clk AND NOT edge THEN
	Q0 := D0;
	Q1 := D1;
	Q2 := D2;
	Q3 := D3;
END_IF;
edge := CLK;

(*From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[quad D-type flip flop with reset and rising clock trigger]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="FF_DRE" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="SET">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="DI">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="CLK">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="RST">
              <type>
                <BOOL/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Q">
              <type>
                <BOOL/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="edge">
              <type>
                <BOOL/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF rst OR set THEN
	Q := NOT rst;
ELSIF clk AND NOT edge THEN
	Q := DI;
END_IF;
edge := CLK;

(*From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[D-type flip flop with set, reset and rising clock trigger]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="FF_JKE" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="SET">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="J">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="CLK">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="K">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="RST">
              <type>
                <BOOL/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Q">
              <type>
                <BOOL/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="edge">
              <type>
                <BOOL/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF rst OR set THEN
	Q := NOT rst;
ELSIF clk AND NOT edge THEN
	IF J XOR K THEN Q := J;
	ELSE Q := K XOR Q;
	END_IF;
END_IF;
edge := CLK;

(*From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[JK-type flip flop with set, reset and rising clock trigger]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="FF_RSE" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="CS">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="CR">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="RST">
              <type>
                <BOOL/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Q">
              <type>
                <BOOL/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="es">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="er">
              <type>
                <BOOL/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF rst THEN
	(* asynchronous reset *)
	Q := FALSE;
ELSIF CR AND NOT er THEN
	(* rising edge on CR *)
	Q := FALSE;
ELSIF CS AND NOT es THEN
	(* rising edge on CS *)
	Q := TRUE;
END_IF;

es := CS;
er := CR;

(*From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this is a rising edge triggered rs flip flop]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="LTCH" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="DI">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="L">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="RST">
              <type>
                <BOOL/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Q">
              <type>
                <BOOL/>
              </type>
            </variable>
          </outputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF rst THEN				(* if asynchronous reset then Q=0 *)
	Q := FALSE;
ELSIF L THEN			(* latch is transparent *)
	Q := DI;
END_IF;

(*From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[Transparent Latch with asynchronous reset]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="LTCH_4" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="D0">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="D1">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="D2">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="D3">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="L">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="RST">
              <type>
                <BOOL/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Q0">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="Q1">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="Q2">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="Q3">
              <type>
                <BOOL/>
              </type>
            </variable>
          </outputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF rst THEN			(* if asynchronous reset then Q=0 *)
	Q0 := FALSE;
	Q1 := FALSE;
	Q2 := FALSE;
	Q3 := FALSE;
ELSIF L THEN			(* latch is transparent *)
	Q0 := D0;
	Q1 := D1;
	Q2 := D2;
	Q3 := D3;
END_IF;

(*From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[Quad Transparent Latch with asynchronous reset]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="SELECT_8" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="EI">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="SET">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="IN">
              <type>
                <BYTE/>
              </type>
            </variable>
            <variable name="UP">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="DN">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="RST">
              <type>
                <BOOL/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Q0">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="Q1">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="Q2">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="Q3">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="Q4">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="Q5">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="Q6">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="Q7">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="state">
              <type>
                <INT/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="last_up">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="last_dn">
              <type>
                <BOOL/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF rst THEN
	state := 0;
ELSIF set THEN
	state := _BYTE_TO_INT(IN);
ELSIF up AND NOT last_up THEN
	state := inc(state,1,7);
ELSIF dn AND NOT last_dn THEN
	state := inc(state,-1,7);
END_IF;
last_UP := UP;
last_DN := DN;

Q0 := FALSE;
Q1 := FALSE;
Q2 := FALSE;
Q3 := FALSE;
Q4 := FALSE;
Q5 := FALSE;
Q6 := FALSE;
Q7 := FALSE;

IF ei THEN
	CASE state OF
		0: Q0 := TRUE;
		1: Q1 := TRUE;
		2: Q2 := TRUE;
		3: Q3 := TRUE;
		4: Q4 := TRUE;
		5: Q5 := TRUE;
		6: Q6 := TRUE;
		7: Q7 := TRUE;
	END_CASE;
END_IF;

(*From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[select_8 selects one of 8 outputs at any time]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="SHR_4E" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="SET">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="D0">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="CLK">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="RST">
              <type>
                <BOOL/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Q0">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="Q1">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="Q2">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="Q3">
              <type>
                <BOOL/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="trig">
              <type>
                <derived name="R_TRIG"/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF set OR rst THEN
	Q0 := NOT RST;
	Q1 := Q0;
	Q2 := Q0;
	Q3 := Q0;
ELSIF trig.Q THEN
	Q3 := Q2;
	Q2 := Q1;
	Q1 := Q0;
	Q0 := D0;
END_IF;

(*From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[4 bit shift register with reset]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="SHR_4UDE" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="SET">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="D0">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="D3">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="CLK">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="DN">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="RST">
              <type>
                <BOOL/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Q0">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="Q1">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="Q2">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="Q3">
              <type>
                <BOOL/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="trig">
              <type>
                <derived name="R_TRIG"/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[trig(clk := clk);

IF set OR rst THEN
	Q0 := NOT RST;
	Q1 := Q0;
	Q2 := Q0;
	Q3 := Q0;
ELSIF trig.Q THEN
	IF dn THEN
		Q0 := Q1;
		Q1 := Q2;
		Q2 := Q3;
		Q3 := D3;
	ELSE
		Q3 := Q2;
		Q2 := Q1;
		Q1 := Q0;
		Q0 := D0;
	END_IF;
END_IF;

(*From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[4 bit shift register with reset up / down direction input]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="SHR_8PLE" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="DIN">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="DLOAD">
              <type>
                <BYTE/>
              </type>
            </variable>
            <variable name="CLK">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="UP">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="TRUE"/>
              </initialValue>
            </variable>
            <variable name="LOAD">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="RST">
              <type>
                <BOOL/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="DOUT">
              <type>
                <BOOL/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="edge">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="TRUE"/>
              </initialValue>
            </variable>
            <variable name="register">
              <type>
                <BYTE/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF CLK AND edge AND NOT rst THEN
	edge := FALSE;	(* flanke wurde erkannt und weitere flankenerkennung wird verhindert bis edge wieder true ist *)
	(* hier ist der code für das flankenevent *)
	IF UP THEN						(*shift up *)
		register := SHL(register,1);
        register := BIT_LOAD_B(register,Din,0);  (* register.X0 := Din; *)
        Dout     := BIT_OF_DWORD(BYTE_TO_DWORD(register),7);     (* Dout := register.X7; *)
	ELSE						    (* shift down *)
		register := SHR(register,1);
        register := BIT_LOAD_B(register,Din,7);  (* register.X7 := Din; *)
        Dout     := BIT_OF_DWORD(BYTE_TO_DWORD(register),0);     (* Dout := register.X0; *)
	END_IF;
	IF load THEN							(* the byte on Din will be loaded if load = true *)
		register := Dload;
		IF up THEN
            Dout := BIT_OF_DWORD(BYTE_TO_DWORD(register),7); (* register.X7 *)
        ELSE
            Dout := BIT_OF_DWORD(BYTE_TO_DWORD(register),0); (* register.X0 *)
        END_IF;
	END_IF;
END_IF;
IF NOT clk THEN edge := TRUE; END_IF;	(* sobald clk wieder low wird warten auf nächste flanke *)
IF rst THEN									(* wenn reset aktiv dann ausgang rücksetzen *)
	register := BYTE#0;
	Dout := FALSE;
END_IF;

(*From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[8 bit shift register with reset and parallel load the register can shift up or down it also has a serial input.]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="SHR_8UDE" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="SET">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="D0">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="D7">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="CLK">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="DN">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="RST">
              <type>
                <BOOL/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Q0">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="Q1">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="Q2">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="Q3">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="Q4">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="Q5">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="Q6">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="Q7">
              <type>
                <BOOL/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="trig">
              <type>
                <derived name="R_TRIG"/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[trig(clk := clk);

IF set OR rst THEN
	Q0 := NOT RST;
	Q1 := Q0;
	Q2 := Q0;
	Q3 := Q0;
	Q4 := Q0;
	Q5 := Q0;
	Q6 := Q0;
	Q7 := Q0;
ELSIF trig.Q THEN
	IF dn THEN
		Q0 := Q1;
		Q1 := Q2;
		Q2 := Q3;
		Q3 := Q4;
		Q4 := Q5;
		Q5 := Q6;
		Q6 := Q7;
		Q7 := D7;
	ELSE
		Q7 := Q6;
		Q6 := Q5;
		Q5 := Q4;
		Q4 := Q3;
		Q3 := Q2;
		Q2 := Q1;
		Q1 := Q0;
		Q0 := D0;
	END_IF;
END_IF;

(*From OSCAT Library, www.oscat.de *]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[8 bit shift register with reset]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="STORE_8" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="SET">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="D0">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="D1">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="D2">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="D3">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="D4">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="D5">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="D6">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="D7">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="CLR">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="RST">
              <type>
                <BOOL/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Q0">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="Q1">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="Q2">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="Q3">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="Q4">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="Q5">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="Q6">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="Q7">
              <type>
                <BOOL/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="edge">
              <type>
                <BOOL/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF rst OR set THEN
	q0 := NOT rst;
	q1 := q0;
	q2 := q0;
	q3 := q0;
	q4 := q0;
	q5 := q0;
	q6 := q0;
	q7 := q0;
ELSE
	IF D0 THEN Q0 := TRUE; END_IF;
	IF D1 THEN Q1 := TRUE; END_IF;
	IF D2 THEN Q2 := TRUE; END_IF;
	IF D3 THEN Q3 := TRUE; END_IF;
	IF D4 THEN Q4 := TRUE; END_IF;
	IF D5 THEN Q5 := TRUE; END_IF;
	IF D6 THEN Q6 := TRUE; END_IF;
	IF D7 THEN Q7 := TRUE; END_IF;

	IF clr AND NOT edge THEN
		IF q0 THEN q0 := FALSE;
		ELSIF q1 THEN q1 := FALSE;
		ELSIF q2 THEN q2 := FALSE;
		ELSIF q3 THEN q3 := FALSE;
		ELSIF q4 THEN q4 := FALSE;
		ELSIF q5 THEN q5 := FALSE;
		ELSIF q6 THEN q6 := FALSE;
		ELSE q7 := FALSE;
		END_IF;
	END_IF;
	edge := clr;
END_IF;

(*From OSCAT Library, www.oscat.de *]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[Store_4 stores up to 4 boolean inputs until a reset is clearing the outputs]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="TOGGLE" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="CLK">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="RST">
              <type>
                <BOOL/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Q">
              <type>
                <BOOL/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="edge">
              <type>
                <BOOL/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF rst THEN
	Q := FALSE;
ELSIF clk AND NOT edge THEN
	Q := NOT Q;
END_IF;
edge := clk;

(*From OSCAT Library, www.oscat.de *)
]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[toggle flip flop the output changes state with every rising edge of clk]]></xhtml:p>
        </documentation>
      </pou>
    </pous>
  </types>
  <instances>
    <configurations>
      <configuration name="Config0">
        <resource name="Res0">
          <task name="task0" priority="0" interval="T#20ms">
            <pouInstance name="instance0" typeName="program0"/>
          </task>
        </resource>
      </configuration>
    </configurations>
  </instances>
</project>
