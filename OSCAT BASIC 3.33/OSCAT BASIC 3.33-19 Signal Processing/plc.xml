<?xml version='1.0' encoding='utf-8'?>
<project xmlns:ns1="http://www.plcopen.org/xml/tc6_0201" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.plcopen.org/xml/tc6_0201">
  <fileHeader companyName="Unbekannt" productName="Unbenannt" productVersion="1" creationDateTime="2019-09-05T12:11:09"/>
  <contentHeader name="Unbenannt" modificationDateTime="2019-09-09T15:47:52">
    <coordinateInfo>
      <fbd>
        <scaling x="10" y="10"/>
      </fbd>
      <ld>
        <scaling x="10" y="10"/>
      </ld>
      <sfc>
        <scaling x="10" y="10"/>
      </sfc>
    </coordinateInfo>
  </contentHeader>
  <types>
    <dataTypes/>
    <pous>
      <pou name="FLOOR" pouType="function">
        <interface>
          <returnType>
            <INT/>
          </returnType>
          <inputVars>
            <variable name="x">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[FLOOR := REAL_TO_INT(X);
IF INT_TO_REAL(FLOOR) > X THEN
	floor := floor - 1;
END_IF;
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[This is a rounding function which returns the biggest possible integer which is less or equal to X. floor(3.14) = 3 floor(-3.14) = -4]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="EVEN" pouType="function">
        <interface>
          <returnType>
            <BOOL/>
          </returnType>
          <inputVars>
            <variable name="IN">
              <type>
                <DINT/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[even := NOT BIT_OF_DWORD(DINT_TO_DWORD(in),0);
(* from OSCAT library; www.oscat.de  *)
(* BIT_OF_DWORD required *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[checks an input for even  value the output is true if the input is even]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="SCALE_X8" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="IN1">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="IN2">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="IN3">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="IN4">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="IN5">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="IN6">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="IN7">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="IN8">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="K">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="O">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="IN1_MIN">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="IN1_MAX">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="IN2_MIN">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="IN2_MAX">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="IN3_MIN">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="IN3_MAX">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="IN4_MIN">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="IN4_MAX">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="IN5_MIN">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="IN5_MAX">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="IN6_MIN">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="IN6_MAX">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="IN7_MIN">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="IN7_MAX">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="IN8_MIN">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="IN8_MAX">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[SCALE_X8 := (SEL(IN1,IN1_MIN, IN1_MAX)+ SEL(IN2,IN2_MIN, IN2_MAX)+SEL(IN3,IN3_MIN, IN3_MAX)+ SEL(IN4,IN4_MIN, IN4_MAX)
				+SEL(IN5,IN5_MIN, IN5_MAX)+ SEL(IN6,IN6_MIN, IN6_MAX)+SEL(IN7,IN7_MIN, IN7_MAX)+ SEL(IN8,IN8_MIN, IN8_MAX))*k + o;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this functiob block can scale up to 8 inputs]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="SCALE_X4" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="IN1">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="IN2">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="IN3">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="IN4">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="K">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="O">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="IN1_MIN">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="IN1_MAX">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="IN2_MIN">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="IN2_MAX">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="IN3_MIN">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="IN3_MAX">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="IN4_MIN">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="IN4_MAX">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF NOT in1 THEN scale_X4 := in1_min; ELSE scale_X4 := in1_max; END_IF;
IF NOT in2 THEN scale_x4 := scale_x4 + in2_min; ELSE scale_x4 := scale_x4 + in2_max; END_IF;
IF NOT in3 THEN scale_x4 := scale_x4 + in3_min; ELSE scale_x4 := scale_x4 + in3_max; END_IF;
IF NOT in4 THEN scale_x4 := scale_x4 + in4_min; ELSE scale_x4 := scale_x4 + in4_max; END_IF;
scale_X4 := scale_X4 * k + O;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this functiob block can scale up to 4 inputs]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="SCALE_B8" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="IN1">
              <type>
                <BYTE/>
              </type>
            </variable>
            <variable name="IN2">
              <type>
                <BYTE/>
              </type>
            </variable>
            <variable name="IN3">
              <type>
                <BYTE/>
              </type>
            </variable>
            <variable name="IN4">
              <type>
                <BYTE/>
              </type>
            </variable>
            <variable name="IN5">
              <type>
                <BYTE/>
              </type>
            </variable>
            <variable name="IN6">
              <type>
                <BYTE/>
              </type>
            </variable>
            <variable name="IN7">
              <type>
                <BYTE/>
              </type>
            </variable>
            <variable name="IN8">
              <type>
                <BYTE/>
              </type>
            </variable>
            <variable name="K">
              <type>
                <REAL/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[Standard = 1.0]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="O">
              <type>
                <REAL/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[Standard = 0.0]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="IN1_MIN">
              <type>
                <REAL/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[Standard = 0.0]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="IN1_MAX">
              <type>
                <REAL/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[Standard = 1000.0]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="IN2_MIN">
              <type>
                <REAL/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[Standard = 0.0]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="IN2_MAX">
              <type>
                <REAL/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[Standard = 1000.0]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="IN3_MIN">
              <type>
                <REAL/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[Standard = 0.0]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="IN3_MAX">
              <type>
                <REAL/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[Standard = 1000.0]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="IN4_MIN">
              <type>
                <REAL/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[Standard = 0.0]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="IN4_MAX">
              <type>
                <REAL/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[Standard = 1000.0]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="IN5_MIN">
              <type>
                <REAL/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[Standard = 0.0]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="IN5_MAX">
              <type>
                <REAL/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[Standard = 1000.0]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="IN6_MIN">
              <type>
                <REAL/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[Standard = 0.0]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="IN6_MAX">
              <type>
                <REAL/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[Standard = 1000.0]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="IN7_MIN">
              <type>
                <REAL/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[Standard = 0.0]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="IN7_MAX">
              <type>
                <REAL/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[Standard = 1000.0]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="IN8_MIN">
              <type>
                <REAL/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[Standard = 0.0]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="IN8_MAX">
              <type>
                <REAL/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[Standard = 1000.0]]></xhtml:p>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[SCALE_B8 := 	(((in1_max - in1_min)* BYTE_TO_REAL(in1) + (in2_max - in2_min)* BYTE_TO_REAL(in2) + (in3_max - in3_min)* BYTE_TO_REAL(in3) + (in4_max - in4_min)* BYTE_TO_REAL(in4) +
				(in5_max - in5_min)* BYTE_TO_REAL(in5) + (in6_max - in6_min)* BYTE_TO_REAL(in6) + (in7_max - in7_min)* BYTE_TO_REAL(in7) + (in8_max - in8_min)* BYTE_TO_REAL(in8)) * 0.003921569
				 + in1_min + in2_min + in3_min + in4_min + in5_min + in6_min + in7_min + in8_min) * K + O;


(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this functiob block can scale up to 8 inputs]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="DEC1" pouType="function">
        <interface>
          <returnType>
            <INT/>
          </returnType>
          <inputVars>
            <variable name="x">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="n">
              <type>
                <INT/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF X = 0 THEN
	DEC1 := N - 1;
ELSE
	DEC1 := X - 1;
END_IF;
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[This is a decrement function which decrements the variable X by 1 and if 0 is reached, it begins with M again. _dec1(3,X) will generate 3,2,1,0,3,2,...]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="_WORD_TO_DINT" pouType="function">
        <interface>
          <returnType>
            <DINT/>
          </returnType>
          <inputVars>
            <variable name="IN">
              <type>
                <WORD/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[_WORD_TO_DINT := UINT_TO_DINT(WORD_TO_UINT(IN));

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
      </pou>
      <pou name="T_PLC_MS" pouType="function">
        <interface>
          <returnType>
            <UDINT/>
          </returnType>
          <localVars>
            <variable name="tx">
              <type>
                <UDINT/>
              </type>
            </variable>
          </localVars>
          <inputVars>
            <variable name="debug">
              <type>
                <BOOL/>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="N">
              <type>
                <INT/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
            </variable>
            <variable name="offset">
              <type>
                <UDINT/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
            </variable>
            <variable name="temp">
              <type>
                <DWORD/>
              </type>
              <initialValue>
                <simpleValue value="1"/>
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[tx := 0;

{extern unsigned long __tick;
extern unsigned long long common_ticktime__;
unsigned long long ticktime_ms = (common_ticktime__)/1000000;
UDINT plc_time = (UDINT)(ticktime_ms * (unsigned long long)__tick);
TX = plc_time}

T_PLC_MS := tx;
IF debug THEN
	T_PLC_MS := (DWORD_TO_UDINT(SHL(UDINT_TO_DWORD(T_PLC_MS),N) OR SHL(temp,N))-1) + OFFSET;
END_IF;

(* Original Code:
tx := TIME();
T_PLC_MS := TIME_TO_DWORD(Tx);
IF debug THEN
	T_PLC_MS := (SHL(T_PLC_MS,N) OR SHL(DWORD#1,N)-1) + _OFFSET;
END_IF;
*)

(* From OSCAT library, www.oscat.de

this is a temporary T_PLC_MS FB until OpenPLC gets it´s own time() functionality *)

(* PLC_TIME and Global variables PLC_SCAN_CYCL and PLC_CYCL_TIME required *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[Output current execution time in miliseconds]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="_RMP_W" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="DIR">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="_E">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="TRUE"/>
              </initialValue>
            </variable>
            <variable name="TR">
              <type>
                <TIME/>
              </type>
            </variable>
          </inputVars>
          <inOutVars>
            <variable name="RMP">
              <type>
                <WORD/>
              </type>
            </variable>
          </inOutVars>
          <localVars>
            <variable name="tx">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="tl">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="_step">
              <type>
                <DINT/>
              </type>
            </variable>
            <variable name="init">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="last_dir">
              <type>
                <BOOL/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[tx := T_PLC_MS(en:=true);
IF _E AND init THEN
	(* we need to set tl = tx when direction changes *)
	IF dir XOR last_dir THEN
	 tl := tx;
	 last_dir := dir;
	END_IF;
	(* check_elapsed time and calculate only if necessary *)
	IF tr > t#0s THEN
		_step := DWORD_TO_DINT(UDINT_TO_DWORD(DWORD_TO_UDINT(SHL(UDINT_TO_DWORD(tx-tl), 16)) / TIME_TO_UDINT(TR)));
	ELSE
		_step := DINT#65535;
	END_IF;
	IF _step > DINT#0 THEN
		(* perform the step on the ramp *)
		tl := tx;
		(* calculate the step response *)
		IF NOT dir THEN _step := - _step; END_IF;
		rmp := DINT_TO_WORD(LIMIT(DINT#0, _WORD_TO_DINT(rmp) + _step, DINT#65535));
	END_IF;
ELSE
	tl := tx;
	init := TRUE;
END_IF;

(* From OSCAT Library, www.oscat.de *)
(* T_PLC_MS required, _WORD_TO_DINT required*)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[_RMP_B generates a ramp on an external var of type byte]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="RMP_W" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="SET">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="PT">
              <type>
                <TIME/>
              </type>
            </variable>
            <variable name="_E">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="TRUE"/>
              </initialValue>
            </variable>
            <variable name="UP">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="TRUE"/>
              </initialValue>
            </variable>
            <variable name="RST">
              <type>
                <BOOL/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="OUT">
              <type>
                <WORD/>
              </type>
            </variable>
            <variable name="BUSY">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="HIGH">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="LOW">
              <type>
                <BOOL/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="rmp">
              <type>
                <derived name="_RMP_W"/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[rmp(dir := UP, _E := _E, TR := PT, rmp := out);
out := rmp.RMP;

(* set or reset operation *)
IF RST THEN
	out := WORD#0;
ELSIF SET THEN
	out := WORD#65535;
END_IF;

(* checks for outputs stable and reset or set busy flag *)
low := out = WORD#0;
high := out = WORD#65535;
busy := NOT (low OR high) AND _E;

(* From OSCAT Library, www.oscat.de *)
(* _RMP_W required*)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this ramp generator generates a Word wide ramp with 65535 steps]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="INC1" pouType="function">
        <interface>
          <returnType>
            <INT/>
          </returnType>
          <inputVars>
            <variable name="X">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="N">
              <type>
                <INT/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF X >= N - 1 THEN
	INC1 := 0;
ELSE
	INC1 := X + 1;
END_IF;
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[This is a increment function which increments the variable X by 1 and if N is reached, it begins with 0 instead of N again.]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="SIGN_R" pouType="function">
        <interface>
          <returnType>
            <BOOL/>
          </returnType>
          <inputVars>
            <variable name="IN">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[SIGN_R := in < 0.0;
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this function return true if the real input is negative]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="BIT_OF_DWORD" pouType="function">
        <interface>
          <returnType>
            <BOOL/>
          </returnType>
          <inputVars>
            <variable name="IN">
              <type>
                <DWORD/>
              </type>
            </variable>
            <variable name="N">
              <type>
                <INT/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[BIT_OF_DWORD := (SHR(in,N) AND 16#00000001) > 0;

(* From Oscat Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this function extracts a single bit from the nth position from right (right is lowest bit the lowest Bit (Bit0 from in) is selected with N=.]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="program0" pouType="program">
        <interface>
          <localVars>
            <variable name="LocalVar0">
              <type>
                <DINT/>
              </type>
            </variable>
            <variable name="LocalVar1">
              <type>
                <DINT/>
              </type>
            </variable>
            <variable name="LocalVar2">
              <type>
                <DINT/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <FBD>
            <block localId="1" typeName="ADD" executionOrderId="0" height="60" width="70">
              <position x="530" y="110"/>
              <inputVariables>
                <variable formalParameter="IN1">
                  <connectionPointIn>
                    <relPosition x="0" y="30"/>
                    <connection refLocalId="2">
                      <position x="530" y="140"/>
                      <position x="490" y="140"/>
                    </connection>
                  </connectionPointIn>
                </variable>
                <variable formalParameter="IN2">
                  <connectionPointIn>
                    <relPosition x="0" y="50"/>
                    <connection refLocalId="3">
                      <position x="530" y="160"/>
                      <position x="490" y="160"/>
                    </connection>
                  </connectionPointIn>
                </variable>
              </inputVariables>
              <inOutVariables/>
              <outputVariables>
                <variable formalParameter="OUT">
                  <connectionPointOut>
                    <relPosition x="70" y="30"/>
                  </connectionPointOut>
                </variable>
              </outputVariables>
            </block>
            <inVariable localId="2" executionOrderId="0" height="30" width="90" negated="false">
              <position x="400" y="120"/>
              <connectionPointOut>
                <relPosition x="90" y="20"/>
              </connectionPointOut>
              <expression>LocalVar0</expression>
            </inVariable>
            <inVariable localId="3" executionOrderId="0" height="30" width="90" negated="false">
              <position x="400" y="150"/>
              <connectionPointOut>
                <relPosition x="90" y="10"/>
              </connectionPointOut>
              <expression>LocalVar1</expression>
            </inVariable>
            <outVariable localId="4" executionOrderId="0" height="30" width="90" negated="false">
              <position x="640" y="130"/>
              <connectionPointIn>
                <relPosition x="0" y="10"/>
                <connection refLocalId="1" formalParameter="OUT">
                  <position x="640" y="140"/>
                  <position x="600" y="140"/>
                </connection>
              </connectionPointIn>
              <expression>LocalVar2</expression>
            </outVariable>
          </FBD>
        </body>
      </pou>
      <pou name="TREND_DW" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="X">
              <type>
                <DWORD/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Q">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="TU">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="TD">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="_D">
              <type>
                <DWORD/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="last_x">
              <type>
                <DWORD/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF X > last_X THEN
	TU := TRUE;
	TD := FALSE;
	_D := UDINT_TO_DWORD(DWORD_TO_UDINT(X) - DWORD_TO_UDINT(last_X));
	Q := TRUE;
ELSIF X < last_X THEN
	TD := TRUE;
	TU := FALSE;
	_D := UDINT_TO_DWORD(DWORD_TO_UDINT(last_X) - DWORD_TO_UDINT(X));
	Q := FALSE;
ELSE
	TU := FALSE;
	TD := FALSE;
	_D := DWORD#0;
END_IF;
last_X := X;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[trend_DW analyses the trend of a input signal.]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="AIN" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="IN">
              <type>
                <DWORD/>
              </type>
            </variable>
            <variable name="BITS">
              <type>
                <BYTE/>
              </type>
            </variable>
            <variable name="SIGN">
              <type>
                <BYTE/>
              </type>
            </variable>
            <variable name="LOW">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="HIGH">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="temp1">
              <type>
                <DWORD/>
              </type>
            </variable>
            <variable name="temp2">
              <type>
                <DWORD/>
              </type>
            </variable>
            <variable name="sx">
              <type>
                <BOOL/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[(* extract the sign bit *)
IF sign < BYTE#32 THEN
	temp1 := SHR(in, BYTE_TO_INT(sign));
	sx := BIT_OF_DWORD(temp1,0); (* temp1.X0 *)
ELSE
	sx := FALSE;
END_IF;
temp1 := SHR(DWORD#16#FFFFFFFF,32 - BYTE_TO_INT(bits));
temp2 := in AND temp1;
AIN := (high - low)* DWORD_TO_REAL(temp2) / DWORD_TO_REAL(temp1) + low;
IF sx THEN AIN := -AIN; END_IF;

(* From OSCAT Library, www.oscat.de *)
(* BIT_OF_DWORD requiered *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[Ain converts signals from A/D converters or other digital sources to an internal real value]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="AOUT" pouType="function">
        <interface>
          <returnType>
            <DWORD/>
          </returnType>
          <inputVars>
            <variable name="IN">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="BITS">
              <type>
                <BYTE/>
              </type>
            </variable>
            <variable name="SIGN">
              <type>
                <BYTE/>
              </type>
            </variable>
            <variable name="LOW">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="HIGH">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="in2">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="sx">
              <type>
                <BOOL/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[(* if sign bit is defined *)
IF sign < BYTE#32 THEN
	sx := sign_R(in);
	in2 := ABS(in);
ELSE
	in2 := in;
END_IF;

(* begrenze in auf die zulässigen werte *)
in2 := LIMIT(low, in2, high);

(* Berechne den Ausgangswert *)
Aout := REAL_TO_DWORD((in2 - low) / (high - low) * (DWORD_TO_REAL(SHL(DWORD#2#1,BYTE_TO_INT(bits))) - 1.0)   );
IF sx THEN Aout := SHL(DWORD#2#1,BYTE_TO_INT(sign)) OR Aout; END_IF;
  
(* From OSCAT Library, www.oscat.de *)
(* SIGN_R required *)
]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this module conditions an internal real value for D/A converter]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="AOUT1" pouType="function">
        <interface>
          <returnType>
            <DWORD/>
          </returnType>
          <inputVars>
            <variable name="IN">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="BIT_0">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="BIT_N">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="SIGN">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="LOW">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="HIGH">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="in2">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="sx">
              <type>
                <BOOL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[(* if sign bit is defined *)

IF sign < 32 THEN
	sx := sign_R(in);
	in2 := ABS(in);
ELSE
    sx := FALSE;
	in2 := in;
END_IF;

(* begrenze in auf die zulässigen werte *)
in2 := LIMIT(low, in2, high);

(* Berechne den Ausgangswert *)
AOUT1 :=  SHL(REAL_TO_DWORD((in2 - low) / (high - low) * UDINT_TO_REAL(DWORD_TO_UDINT(SHL(DWORD#2#1,bit_n - Bit_0 + 1)) - UDINT#1)),Bit_0);

IF sx THEN AOUT1 := SHL(DWORD#2#1,sign) OR AOUT1; END_IF;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this module conditions an internal real value for a D/A converter]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="BYTE_TO_RANGE" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="X">
              <type>
                <BYTE/>
              </type>
            </variable>
            <variable name="LOW">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="HIGH">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[Byte_to_Range := (high - low) * BYTE_TO_REAL(X) / 255.0 + low;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[Byte_to_Range converts a Byte into a real between low and high]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="DELAY" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="IN">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="N">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="RST">
              <type>
                <BOOL/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="OUT">
              <type>
                <REAL/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="buf">
              <type>
                <array>
                  <dimension lower="0" upper="31"/>
                  <baseType>
                    <REAL/>
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="i">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="init">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="stop">
              <type>
                <INT/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[stop := LIMIT(0,N,32) - 1;
IF rst OR NOT init THEN
	init := TRUE;
	FOR i := 0 TO stop DO buf[i] := in; END_FOR;
	out := in;
	i := 0;
ELSIF stop < 0 THEN
	out := in;
ELSE
	out := buf[i];
	buf[i] := in;
	i := INC1(i, N);
END_IF;

(* From OSCAT Library, www.oscat.de *)
(* INC1 required *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this function block delays input values by each programm cycle ]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="DELAY_4" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="IN">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="OUT1">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="OUT2">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="OUT3">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="OUT4">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="temp">
              <type>
                <REAL/>
              </type>
            </variable>
          </outputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[out4 := out3;
out3 := out2;
out2 := out1;
out1 := temp;
temp := in;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this function block delays input values by each programm cycle]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="FADE" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="IN1">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="IN2">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="F">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="TF">
              <type>
                <TIME/>
              </type>
            </variable>
            <variable name="RST">
              <type>
                <BOOL/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Y">
              <type>
                <REAL/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="rmx">
              <type>
                <derived name="RMP_W"/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[rmx(rst := rst AND NOT F, set := rst AND F, pt := TF, up := F);
Y := (in2 - In1) / 65535.0 * WORD_TO_REAL(rmx.out) + in1;

(* From OSCAT Library, www.oscat.de *)
(* RMP_W required *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[FADE is used to crossfade between the inputs IN1 and IN2]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="FILTER_DW" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="X">
              <type>
                <DWORD/>
              </type>
            </variable>
            <variable name="_T">
              <type>
                <TIME/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Y">
              <type>
                <DWORD/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="last">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="init">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="tx">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="Yi">
              <type>
                <REAL/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[tx:= T_PLC_MS(en:=true);

(* startup initialisation *)
IF NOT init OR _T = t#0s THEN
	init := TRUE;
	Yi := DWORD_TO_REAL(X);
ELSE
	Yi := Yi + (DWORD_TO_REAL(X) - DWORD_TO_REAL(Y)) * UDINT_TO_REAL(tx - last) / TIME_TO_REAL(_T);
END_IF;
last := tx;

Y := REAL_TO_DWORD(Yi);


(* From OSCAT Library, www.oscat.de *)
(* T_PLC_MS required *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[FILTER_DW is an low pass filter ]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="FILTER_I" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="X">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="_T">
              <type>
                <TIME/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Y">
              <type>
                <INT/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="Yi">
              <type>
                <DINT/>
              </type>
            </variable>
            <variable name="last">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="tx">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="init">
              <type>
                <BOOL/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[tx:= T_PLC_MS(en:=true);

(* startup initialisation *)
IF NOT init OR _T = t#0s THEN
	init := TRUE;
	Yi := INT_TO_DINT(X) * DINT#1000;
ELSE
	(* to increase accuracy of the filter we calculate internal Yi wich is Y * 1000 *)
	Yi := Yi + INT_TO_DINT(X - Y) * UDINT_TO_DINT(tx - last) * DINT#1000 / TIME_TO_DINT(_T);
END_IF;
last := tx;
Y := DINT_TO_INT(yi / DINT#1000);

(* From OSCAT Library, www.oscat.de *)
(* T_PLC_MS required *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[FILTER_I is a low pass filter]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="FILTER_MAV_DW" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="X">
              <type>
                <DWORD/>
              </type>
            </variable>
            <variable name="N">
              <type>
                <UINT/>
              </type>
            </variable>
            <variable name="RST">
              <type>
                <BOOL/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Y">
              <type>
                <DWORD/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="init">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="buffer">
              <type>
                <array>
                  <dimension lower="0" upper="31"/>
                  <baseType>
                    <DWORD/>
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="i">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="tmp">
              <type>
                <INT/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[N := MIN(N, UINT#32);

(* startup initialisation *)
IF NOT init OR rst OR N = UINT#0 THEN
	init := TRUE;
	tmp := UINT_TO_INT(N)-1;
	FOR i := 0 TO tmp DO
		buffer[i] := X;
	END_FOR;
	Y := X;
ELSE
	tmp := UINT_TO_INT(N);
	i := INC1(i, tmp);
	Y := UDINT_TO_DWORD(DWORD_TO_UDINT(Y) + (DWORD_TO_UDINT(X) - DWORD_TO_UDINT(buffer[i])) / UINT_TO_UDINT(N));
	buffer[i] := X;
END_IF;

(* From OSCAT Library, www.oscat.de *)
(* INC1 required *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[FILTER_MAV_DW is a moving average filter ]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="FILTER_MAV_W" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="X">
              <type>
                <WORD/>
              </type>
            </variable>
            <variable name="N">
              <type>
                <UINT/>
              </type>
            </variable>
            <variable name="RST">
              <type>
                <BOOL/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Y">
              <type>
                <WORD/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="init">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="buffer">
              <type>
                <array>
                  <dimension lower="0" upper="31"/>
                  <baseType>
                    <WORD/>
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="i">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="sum">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="tmp">
              <type>
                <INT/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[N := MIN(N, UINT#32);

(* startup initialisation *)
IF NOT init OR rst OR N = UINT#0 THEN
	init := TRUE;
	tmp := UINT_TO_INT(N) - 1;
	FOR i := 1 TO tmp DO
		buffer[i] := X;
	END_FOR;
	sum := UINT_TO_UDINT(WORD_TO_UINT(Y) * N);
	Y := X;
ELSE
	tmp := UINT_TO_INT(N);
	i := INC1(i, tmp);
	sum := sum + WORD_TO_UDINT(X) - WORD_TO_UDINT(buffer[i]);
	Y := UDINT_TO_WORD(sum / UINT_TO_UDINT(N));
	buffer[i] := X;
END_IF;

(* From OSCAT Library, www.oscat.de *)
(* INC1 required *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[FILTER_MAV_W is a moving average filter ]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="FILTER_W" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="X">
              <type>
                <WORD/>
              </type>
            </variable>
            <variable name="_T">
              <type>
                <TIME/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Y">
              <type>
                <WORD/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="last">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="tx">
              <type>
                <UDINT/>
              </type>
            </variable>
            <variable name="init">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="tmp">
              <type>
                <DINT/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[tx:= T_PLC_MS(en:=true);

(* startup initialisation *)
IF NOT init OR _T = T#0s THEN
	init := TRUE;
	last := tx;
	Y := X;
ELSIF Y = X THEN
	last := tx;
ELSE
	tmp := UINT_TO_DINT(WORD_TO_UINT(X) - WORD_TO_UINT(Y)) * UDINT_TO_DINT(tx - last) / TIME_TO_DINT(_T);
	IF tmp <> DINT#0 THEN
		Y := DINT_TO_WORD(WORD_TO_DINT(Y) + tmp);
		last := tx;
	END_IF;
END_IF;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[FILTER_W is an low pass filter ]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="FILTER_WAV" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="X">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="W">
              <type>
                <array>
                  <dimension lower="0" upper="15"/>
                  <baseType>
                    <REAL/>
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="RST">
              <type>
                <BOOL/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Y">
              <type>
                <REAL/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="init">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="buffer">
              <type>
                <array>
                  <dimension lower="0" upper="15"/>
                  <baseType>
                    <REAL/>
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="i">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="n">
              <type>
                <INT/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[(* startup initialisation *)
IF NOT init OR rst THEN
	init := TRUE;
	FOR i := 0 TO 15 DO
		buffer[i] := X;
	END_FOR;
	i := 15;
	Y := X;
ELSE
	i := INC1(i, 16);
	buffer[i] := X;
END_IF;

(* calculate the weighted average *)
Y := 0.0;
FOR n := 0 TO 15 DO
	Y := buffer[i] * W[n] + Y;
	i := DEC1(i, 16);
END_FOR;

(* From OSCAT Library, www.oscat.de *)
(* DEC1 required *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[FILTER_WAV is a moving average filter ]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="MIX" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="A">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="B">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="M">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[MIX := (1.0 - M) * A + M * B;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[MIX is an analog Mixer]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="MUX_R2" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="IN0">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="IN1">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="A">
              <type>
                <BOOL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[MUX_R2 := SEL(A, IN0, IN1);

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[MUX_R2 is an analog Multiplexer]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="MUX_R4" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="IN0">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="IN1">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="IN2">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="IN3">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="A0">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="A1">
              <type>
                <BOOL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF A1 THEN
	MUX_R4 := SEL(A0, IN2, IN3);
ELSE
	MUX_R4 := SEL(A0, IN0, IN1);
END_IF;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[MUX_R4 is an analog Multiplexer]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="OFFSET_OSCAT" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="X">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="O1">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="O2">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="O3">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="O4">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="_D">
              <type>
                <BOOL/>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="OFFSET_1">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="OFFSET_2">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="OFFSET_3">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="OFFSET_4">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="Default">
              <type>
                <REAL/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF _D THEN Offset_oscat := default; ELSE Offset_oscat := X; END_IF;
IF O1 THEN Offset_oscat := Offset_oscat + offset_1; END_IF;
IF O2 THEN Offset_oscat := Offset_oscat + offset_2; END_IF;
IF O3 THEN Offset_oscat := Offset_oscat + offset_3; END_IF;
IF O4 THEN Offset_oscat := Offset_oscat + offset_4; END_IF;

(* From OSCAT Library, www.oscat.de *)
(* Name changed to Offset_Oscat due to collision*)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[The Function offset adds offsets to an analog signal depending on digital inputs.]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="OFFSET2" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="X">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="O1">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="O2">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="O3">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="O4">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="_D">
              <type>
                <BOOL/>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="OFFSET_1">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="OFFSET_2">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="OFFSET_3">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="OFFSET_4">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="DEFAULT">
              <type>
                <REAL/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF _D THEN Offset2 := default; ELSE Offset2 := X; END_IF;
IF O4 THEN Offset2 := Offset2 + offset_4;
ELSIF O3 THEN Offset2 := Offset2 + offset_3;
ELSIF O2 THEN Offset2 := Offset2 + offset_2;
ELSIF O1 THEN Offset2 := Offset2 + offset_1;
END_IF;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[The Function offset adds offsets to an analog signal depending on digital inputs.]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="RANGE_TO_BYTE" pouType="function">
        <interface>
          <returnType>
            <BYTE/>
          </returnType>
          <inputVars>
            <variable name="X">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="LOW">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="HIGH">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[Range_to_Byte := INT_TO_BYTE(TRUNC((LIMIT(low,X,high)-low) * 255.0 / (high - low)));

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[Range_to_byte converts a real value between low and high into a byte]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="OVERRIDE" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="X1">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="X2">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="X3">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="E1">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="E2">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="E3">
              <type>
                <BOOL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF E1 THEN OVERRIDE := X1; END_IF;
IF E2 AND ABS(x2) > ABS(OVERRIDE) THEN OVERRIDE := X2; END_IF;
IF E3 AND ABS(x3) > ABS(OVERRIDE) THEN OVERRIDE := X3; END_IF;
  
(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
      </pou>
      <pou name="RANGE_TO_WORD" pouType="function">
        <interface>
          <returnType>
            <WORD/>
          </returnType>
          <inputVars>
            <variable name="X">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="LOW">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="HIGH">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[Range_to_Word := INT_TO_WORD(TRUNC((LIMIT(low,X,high)-low) * 65535.0 / (high - low)));

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[Range_to_word converts a real value between low and high into a byte]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="SCALE" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="X">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="K">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="O">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="MX">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="MN">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[SCALE := LIMIT(MN, X * K + O, MX);

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[Scale is used to translate an input x to output by the formula Y = X*K + O]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="SCALE_B" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="X">
              <type>
                <BYTE/>
              </type>
            </variable>
            <variable name="I_LO">
              <type>
                <BYTE/>
              </type>
            </variable>
            <variable name="I_HI">
              <type>
                <BYTE/>
              </type>
            </variable>
            <variable name="O_LO">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="O_HI">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF I_HI = I_LO THEN
	SCALE_B := O_LO;
ELSE
	SCALE_B := (O_HI - O_LO) / USINT_TO_REAL(BYTE_TO_USINT(I_HI) - BYTE_TO_USINT(I_LO)) * BYTE_TO_REAL(LIMIT(I_LO,X,I_HI));
END_IF;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[Scale_B is used to translate and scale a byte input x to a real output]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="SCALE_B2" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="IN1">
              <type>
                <BYTE/>
              </type>
            </variable>
            <variable name="IN2">
              <type>
                <BYTE/>
              </type>
            </variable>
            <variable name="K">
              <type>
                <REAL/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[Standard =1.0]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="O">
              <type>
                <REAL/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[Standard =0.0]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="IN1_MIN">
              <type>
                <REAL/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[Standard =0.0]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="IN1_MAX">
              <type>
                <REAL/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[Standard =1000.0]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="IN2_MIN">
              <type>
                <REAL/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[Standard =0.0]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="IN2_MAX">
              <type>
                <REAL/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[Standard =1000.0]]></xhtml:p>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[SCALE_B2 := 	(((in1_max - in1_min)* BYTE_TO_REAL(in1) + (in2_max - in2_min)* BYTE_TO_REAL(in2)) * 0.003921569 + in1_min + in2_min) * K + O;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this functiob block can scale up to two inputs.]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="SCALE_B4" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="IN1">
              <type>
                <BYTE/>
              </type>
            </variable>
            <variable name="IN2">
              <type>
                <BYTE/>
              </type>
            </variable>
            <variable name="IN3">
              <type>
                <BYTE/>
              </type>
            </variable>
            <variable name="IN4">
              <type>
                <BYTE/>
              </type>
            </variable>
            <variable name="K">
              <type>
                <REAL/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[Standard = 1.0]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="O">
              <type>
                <REAL/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[Standard = 0.0]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="IN1_MIN">
              <type>
                <REAL/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[Standard = 0.0]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="IN1_MAX">
              <type>
                <REAL/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[Standard = 1000.0]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="IN2_MIN">
              <type>
                <REAL/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[Standard = 0.0]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="IN2_MAX">
              <type>
                <REAL/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[Standard = 1000.0]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="IN3_MIN">
              <type>
                <REAL/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[Standard = 0.0]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="IN3_MAX">
              <type>
                <REAL/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[Standard = 1000.0]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="IN4_MIN">
              <type>
                <REAL/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[Standard = 0.0]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="IN4_MAX">
              <type>
                <REAL/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[Standard = 1000.0]]></xhtml:p>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[SCALE_B4 := 	(((in1_max - in1_min)* BYTE_TO_REAL(in1) + (in2_max - in2_min)* BYTE_TO_REAL(in2) + (in3_max - in3_min)* BYTE_TO_REAL(in3) + (in4_max - in4_min)* BYTE_TO_REAL(in4))* 0.003921569 + in1_min + in2_min + in3_min + in4_min) * K + O;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this functiob block can scale up to 4 inputs]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="SCALE_D" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="X">
              <type>
                <DWORD/>
              </type>
            </variable>
            <variable name="I_LO">
              <type>
                <DWORD/>
              </type>
            </variable>
            <variable name="I_HI">
              <type>
                <DWORD/>
              </type>
            </variable>
            <variable name="O_LO">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="O_HI">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF I_HI = I_LO THEN
	SCALE_D := O_LO;
ELSE
	SCALE_D := (O_HI - O_LO) / UDINT_TO_REAL(DWORD_TO_UDINT(I_HI) - DWORD_TO_UDINT(I_LO)) * UDINT_TO_REAL(LIMIT(DWORD_TO_UDINT(I_LO),DWORD_TO_UDINT(X),DWORD_TO_UDINT(I_HI)) - DWORD_TO_UDINT(I_LO)) + O_LO;
END_IF;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[Scale_D is used to translate and scale a DWORD input x to a real output]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="SCALE_R" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="X">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="I_LO">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="I_HI">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="O_LO">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="O_HI">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF I_LO = I_HI THEN
	SCALE_R := O_LO;
ELSE
	SCALE_R := (O_HI - O_LO) / (I_HI - I_LO) * (LIMIT(I_LO, X, I_HI) - I_LO) + O_LO;
END_IF;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[Scale_R is used to translate and scale a REAL input x to a real output]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="SCALE_X2" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="IN1">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="IN2">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="K">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="O">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="IN1_MIN">
              <type>
                <REAL/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[Standard = 0.0]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="IN1_MAX">
              <type>
                <REAL/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[Standard = 1000.0]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="IN2_MIN">
              <type>
                <REAL/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[Standard = 0.0]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="IN2_MAX">
              <type>
                <REAL/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[Standard = 1000.0]]></xhtml:p>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[SCALE_X2 := (SEL(IN1,IN1_MIN, IN1_MAX)+ SEL(IN2,IN2_MIN, IN2_MAX))* k + o;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[scale up to two inputs]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="SEL2_OF_3" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="IN1">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="IN2">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="IN3">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="_D">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Y">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="W">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="_E">
              <type>
                <BOOL/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="D12">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="D23">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="D31">
              <type>
                <BOOL/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[D12 := ABS(IN1-IN2) <= _D;
D23 := ABS(IN2-IN3) <= _D;
D31 := ABS(IN3-IN1) <= _D;

IF (D12 AND D23) OR (D12 AND D31) OR (D23 AND D31) THEN
	(* all 3 inputs are valid *)
	Y := (IN1 + IN2 + IN3) * 0.333333333333;
	_E := FALSE;
	W := 0;
ELSIF D12 THEN
	(* only inut 1 and 2 are valid *)
	Y := (In1 + IN2) * 0.5;
	_E := FALSE;
	W := 3;
ELSIF D23 THEN
	(* only inut 2 and 3 are valid *)
	Y := (In2 + IN3) * 0.5;
	_E := FALSE;
	W := 1;
ELSIF D31 THEN
	(* only inut 3 and 1 are valid *)
	Y := (In3 + IN1) * 0.5;
	_E := FALSE;
	W := 2;
ELSE
	(* no calculation possible *)
	_E := TRUE;
	W := 4;
END_IF;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[SEL2_OF_3 checks if 3 input Signals are within a distance D from each other and calculates the average of the 3 inputs do not offset more than D from each other]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="SEL2_OF_3B" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="IN1">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="IN2">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="IN3">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="TD">
              <type>
                <TIME/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Q">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="W">
              <type>
                <BOOL/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="TDEL">
              <type>
                <derived name="TON"/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[Q := (IN1 AND IN2) OR (IN1 AND IN3) OR (IN2 AND IN3);
TDEL(IN := (in1 XOR in2) OR (in1 XOR in3) OR (in2 XOR in3), PT := TD);
W := TDEL.Q;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[SEL2_OF_3B is used to connect 3 binary sensors to one signal]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="SH" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="IN">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="CLK">
              <type>
                <BOOL/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="OUT">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="TRIG">
              <type>
                <BOOL/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="edge">
              <type>
                <BOOL/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF clk AND NOT edge THEN
	out := in;
	trig := TRUE;
ELSE
	trig := FALSE;
END_IF;
edge := clk;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this sample and hold module samples an input at the rising edge of clk an stores it in out]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="SH_1" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="IN">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="PT">
              <type>
                <TIME/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="OUT">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="TRIG">
              <type>
                <BOOL/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="last">
              <type>
                <TIME/>
              </type>
            </variable>
            <variable name="tx">
              <type>
                <TIME/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[tx:= UDINT_TO_TIME(T_PLC_MS(en:=true));

IF tx - last >= PT THEN
	last := tx;
	out := in;
	trig := TRUE;
ELSE
	trig := FALSE;
END_IF;

(* From OSCAT Library, www.oscat.de *)
(* T_PLC_MS required *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this sample and hold module samples an input every PT seconds]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="SH_2" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="IN">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="PT">
              <type>
                <TIME/>
              </type>
            </variable>
            <variable name="N">
              <type>
                <INT/>
              </type>
              <initialValue>
                <simpleValue value="16"/>
              </initialValue>
            </variable>
            <variable name="DISC">
              <type>
                <INT/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="OUT">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="TRIG">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="AVG">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="HIGH">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="LOW">
              <type>
                <REAL/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="M">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="buf">
              <type>
                <array>
                  <dimension lower="0" upper="15"/>
                  <baseType>
                    <REAL/>
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="buf2">
              <type>
                <array>
                  <dimension lower="0" upper="15"/>
                  <baseType>
                    <REAL/>
                  </baseType>
                </array>
              </type>
            </variable>
            <variable name="last">
              <type>
                <TIME/>
              </type>
            </variable>
            <variable name="i">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="i2">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="start">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="temp">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="stop">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="tx">
              <type>
                <TIME/>
              </type>
            </variable>
            <variable name="d2">
              <type>
                <INT/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[tx:= UDINT_TO_TIME(T_PLC_MS(en:=true));
d2 := WORD_TO_INT(SHR(INT_TO_WORD(disc),1));

IF tx - last >= PT THEN
	last := tx;
	trig := TRUE;

	(* limit M to 0..16 *)
	M := LIMIT(1,N,16);

	(* edge detected lets take the sample *)
    i := M-1;
    WHILE (i>=1) DO
      i2 := i-1;
      buf2[i] := buf2[i2];
      i:=i-1;
    END_WHILE;

	buf2[0] := in;
	out := in;
	buf := buf2;

	(* sort the ARRAY lowest value AT 0 *)
	FOR start := 0 TO M - 2 DO
		FOR i := start+1 TO M - 1 DO
			IF buf[start] > buf[i] THEN
				temp := buf[start];
				buf[start] := buf[i];
				buf[i] := temp;
			END_IF;
		END_FOR;
	END_FOR;

	(* any calculation with the samples is here *)
	stop := M - 1 - d2;
	start := d2;
	IF NOT even(INT_TO_DINT(disc)) THEN start := start + 1; END_IF;
	avg := 0.0;
	FOR i := start TO stop DO avg := avg + buf[i]; END_FOR;
	avg := avg / INT_TO_REAL(stop - start +1);
	low := buf[start];
	high := buf[stop];
ELSE
	Trig := FALSE;
END_IF;

(* From OSCAT Library, www.oscat.de *)
(* T_PLC_MS and EVEN required *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this sample and hold module samples an input every PT seconds]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="SH_T" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="IN">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="_E">
              <type>
                <BOOL/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="OUT">
              <type>
                <REAL/>
              </type>
            </variable>
          </outputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF _E THEN out := in; END_IF;
  
(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this sample and hold module samples an input while en is high]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="STAIR" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="X">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="_D">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF _D > 0.0 THEN
	STAIR := DINT_TO_REAL(REAL_TO_DINT(X / _D)) * _D;
ELSE
	STAIR := X;
END_IF;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[the function stair converts an anlog input signal to a staircase like output]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="STAIR2" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="X">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="_D">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Y">
              <type>
                <REAL/>
              </type>
            </variable>
          </outputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF _D > 0.0 THEN
	IF X >= Y + _D OR X <= Y - _D THEN Y := INT_TO_REAL(FLOOR(X/_D)) * _D; END_IF;
ELSE
	Y := X;
END_IF;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[the function stair2 converts an anlog input signal to a staircase like output]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="TREND" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="X">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Q">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="TU">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="TD">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="_D">
              <type>
                <REAL/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="last_x">
              <type>
                <REAL/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[TU := X > last_X;
TD := X < last_X;
Q := TU OR TD;
_D := X - LAST_X;

last_X := X;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[trend analyses the trend of a input signal]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="WORD_TO_RANGE" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="X">
              <type>
                <WORD/>
              </type>
            </variable>
            <variable name="LOW">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="HIGH">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[WORD_TO_RANGE := (high - low) * WORD_TO_REAL(X) * 0.00001525902189669640 + low;

(* From OSCAT Library, www.oscat.de *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[Word_to_Range converts a Byte into a real between low and high]]></xhtml:p>
        </documentation>
      </pou>
    </pous>
  </types>
  <instances>
    <configurations>
      <configuration name="Config0">
        <resource name="Res0">
          <task name="task0" priority="0" interval="T#20ms">
            <pouInstance name="instance0" typeName="program0"/>
          </task>
        </resource>
      </configuration>
    </configurations>
  </instances>
</project>
