<?xml version='1.0' encoding='utf-8'?>
<project xmlns:ns1="http://www.plcopen.org/xml/tc6_0201" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.plcopen.org/xml/tc6_0201">
  <fileHeader companyName="Unbekannt" productName="Unbenannt" productVersion="1" creationDateTime="2019-08-21T11:21:03"/>
  <contentHeader name="Unbenannt" modificationDateTime="2019-08-23T09:36:49">
    <coordinateInfo>
      <fbd>
        <scaling x="10" y="10"/>
      </fbd>
      <ld>
        <scaling x="10" y="10"/>
      </ld>
      <sfc>
        <scaling x="10" y="10"/>
      </sfc>
    </coordinateInfo>
  </contentHeader>
  <types>
    <dataTypes>
      <dataType name="FRACTION">
        <baseType>
          <struct>
            <variable name="Numerator">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="Denominator">
              <type>
                <INT/>
              </type>
            </variable>
          </struct>
        </baseType>
      </dataType>
    </dataTypes>
    <pous>
      <pou name="CAUCHYCD" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="X">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="T_Cauchy">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="U">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[CAUCHYCD := 0.5 + 0.318309886183791 * ATAN((X - T_Cauchy) / U);

(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="CAUCHY" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="X">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="T_Cauchy">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="U">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="tmp">
              <type>
                <REAL/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[tmp := x - T_Cauchy;
CAUCHY := 0.318309886183791 * U / (U*U + tmp*tmp);

(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this function calculates the Cauchy distribution function]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="BINOM" pouType="function">
        <interface>
          <returnType>
            <INT/>
          </returnType>
          <inputVars>
            <variable name="N">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="K">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="i">
              <type>
                <INT/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF 2 * K > n THEN
	k := n - k;
END_IF;
IF k > n THEN
	RETURN;
ELSIF k = 0 OR k = n THEN
	BINOM := 1;
ELSIF k = 1 THEN
	BINOM := n;
ELSE
	BINOM := n;
	n := n + 1;
	FOR i := 2 TO k DO
		BINOM := BINOM * (n - i) / i;
	END_FOR;
END_IF;

(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
      </pou>
      <pou name="ATANH" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="x">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[ATANH := LN((1.0 + x)/(1.0 - x)) * 0.5;
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
      </pou>
      <pou name="ATAN2" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="X">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="Y">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF X > 0.0 THEN
	ATAN2 := ATAN(Y/X);
ELSIF X < 0.0 THEN
	IF Y >= 0.0 THEN
		ATAN2 := ATAN(Y/X) + 3.14159265358979323846264338327950288;
	ELSE
		ATAN2 := ATAN(Y/X) - 3.14159265358979323846264338327950288;
	END_IF;
ELSIF Y > 0.0 THEN
	ATAN2 := 1.5707963267948965580;
ELSIF Y < 0.0 THEN
	ATAN2 := -1.5707963267948965580;
ELSE
	ATAN2 := 0.0;
END_IF;


(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this function calculates the angle in a coordinate system in rad.]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="ASINH" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="X">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[ASINH := LN(SQRT(X * X + 1.0)+X);
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this function calculates the arcus sin hyperbolicus]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="AGDF" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="X">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[AGDF := LN((1.0 + SIN(X)) / COS(X));

(* comment
the current implementation gives sufficient accuracy only up to X = 1.57 or an output > 10.
is X closer to PI/2 then the function is more and more unreliable
*)
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this function calculates the inverse Gudermannian function.]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="ACOTH" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="x">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[ACOTH := LN((x+1.0)/(x-1.0))*0.5;
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[calculates the arcus cotangens hyperbolicus]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="ACOSH" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="X">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[ACOSH := LN(SQRT(X * X - 1.0) + X);
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[calculates the arcus cos hyperbolicus]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="program0" pouType="program">
        <interface>
          <localVars>
            <variable name="LocalVar0">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="LocalVar2">
              <type>
                <derived name="FRACTION"/>
              </type>
            </variable>
            <variable name="LocalVar1">
              <type>
                <INT/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <FBD>
            <inVariable localId="2" executionOrderId="0" height="30" width="90" negated="false">
              <position x="280" y="80"/>
              <connectionPointOut>
                <relPosition x="90" y="20"/>
              </connectionPointOut>
              <expression>LocalVar0</expression>
            </inVariable>
            <outVariable localId="3" executionOrderId="0" height="30" width="90" negated="false">
              <position x="540" y="80"/>
              <connectionPointIn>
                <relPosition x="0" y="20"/>
                <connection refLocalId="5" formalParameter="OUT">
                  <position x="540" y="100"/>
                  <position x="490" y="100"/>
                </connection>
              </connectionPointIn>
              <expression>LocalVar1</expression>
            </outVariable>
            <block localId="5" typeName="CEIL" executionOrderId="0" height="40" width="50">
              <position x="440" y="70"/>
              <inputVariables>
                <variable formalParameter="x">
                  <connectionPointIn>
                    <relPosition x="0" y="30"/>
                    <connection refLocalId="2">
                      <position x="440" y="100"/>
                      <position x="370" y="100"/>
                    </connection>
                  </connectionPointIn>
                </variable>
              </inputVariables>
              <inOutVariables/>
              <outputVariables>
                <variable formalParameter="OUT">
                  <connectionPointOut>
                    <relPosition x="50" y="30"/>
                  </connectionPointOut>
                </variable>
              </outputVariables>
            </block>
          </FBD>
        </body>
      </pou>
      <pou name="GAMMA" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="x">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF x > 0.0 THEN
	GAMMA := SQRT(6.28318530717958647692528676655900576 / X) * EXPT(0.367879441171442 * (x + 1.0 / (12.0 * x - 0.1 / X)), X);
END_IF;
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[calculates the stirling function which is an approximation for the gamma function]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="BETA" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="x">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="y">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[BETA := GAMMA(X)*GAMMA(Y) / GAMMA(x+y);
(* FC Gamma required *)
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[calculates the beta function for real number > 0.]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="CEIL2" pouType="function">
        <interface>
          <returnType>
            <DINT/>
          </returnType>
          <inputVars>
            <variable name="x">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[CEIL2 := REAL_TO_DINT(x);
IF DINT_TO_REAL(CEIL2) < X THEN
        CEIL2 := CEIL2 + DINT#1;
END_IF;
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[This is a rounding function which returns the smallest possible integer which is greater or equal to X.]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="CEIL" pouType="function">
        <interface>
          <returnType>
            <INT/>
          </returnType>
          <inputVars>
            <variable name="x">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[CEIL := REAL_TO_INT(x);
IF INT_TO_REAL(CEIL) < X THEN
        CEIL := CEIL + 1;
END_IF;
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[This is a rounding function which returns the smallest possible integer which is greater or equal to X. ceil(3.14) = 4 ceil(-3.14) = -3]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="FLOOR" pouType="function">
        <interface>
          <returnType>
            <INT/>
          </returnType>
          <inputVars>
            <variable name="x">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[FLOOR := REAL_TO_INT(X);
IF INT_TO_REAL(FLOOR) > X THEN
	floor := floor - 1;
END_IF;
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[This is a rounding function which returns the biggest possible integer which is less or equal to X. floor(3.14) = 3 floor(-3.14) = -4]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="EXP10" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="x">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[exp10 := EXP(X * 2.30258509299405);
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[calculates the exponent to the basis 10]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="CMP" pouType="function">
        <interface>
          <returnType>
            <BOOL/>
          </returnType>
          <inputVars>
            <variable name="x">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="y">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="n">
              <type>
                <INT/>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="tmp">
              <type>
                <REAL/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[tmp := ABS(x);
IF tmp > 0.0 THEN
	tmp := EXP10(INT_TO_REAL(FLOOR(LOG(tmp))-N+1));
ELSE
	tmp := EXP10(tmp);
END_IF;
CMP := ABS(X - Y) < tmp;
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[checks two inputs x and y if they are identical with the first N digits example : cmp(3.141516,3.141517,6 is true]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="COSH" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="x">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="t_c">
              <type>
                <REAL/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[t_c := EXP(X);
COSH := (1.0 / t_c + t_c) * 0.5;
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[calculates the cos hyperbolicus]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="COTH" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="x">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF X > 20.0 THEN
	COTH :=1.0;
ELSIF X < -20.0 THEN
	COTH := -1.0;
ELSE
	COTH := 1.0 + 2.0 / (EXP(X * 2.0) - 1.0);
END_IF;
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[calculates the cotangens hyperbolicus]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="D_TRUNC" pouType="function">
        <interface>
          <returnType>
            <DINT/>
          </returnType>
          <inputVars>
            <variable name="x">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[D_TRUNC := REAL_TO_DINT(X);
IF X > 0.0 THEN
	IF DINT_TO_REAL(D_TRUNC) > X THEN D_TRUNC := D_TRUNC - DINT#1; END_IF;
ELSE
	IF DINT_TO_REAL(D_TRUNC) < X THEN D_TRUNC := D_TRUNC + DINT#1; END_IF;
END_IF;
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[d_trunc truncates a real to a dint 1.5 will be 1 and -1.5 will be -1 d_trunc is necessary because many systems do not offer a trunc to a dint also real_to_dint will not deliver the same result on different systems]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="DEC1" pouType="function">
        <interface>
          <returnType>
            <INT/>
          </returnType>
          <inputVars>
            <variable name="x">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="n">
              <type>
                <INT/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF X = 0 THEN
	DEC1 := N - 1;
ELSE
	DEC1 := X - 1;
END_IF;
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[This is a decrement function which decrements the variable X by 1 and if 0 is reached, it begins with M again. _dec1(3,X) will generate 3,2,1,0,3,2,...]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="DEG" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="RAD">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[DEG := MODR(57.29577951308232 * RAD, 360.0);
(* from OSCAT library; www.oscat.de  *)
(* MODR and FLOOR2 required *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this function converts degrees into Radiant execution time ]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="FLOOR2" pouType="function">
        <interface>
          <returnType>
            <DINT/>
          </returnType>
          <inputVars>
            <variable name="x">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[FLOOR2 := REAL_TO_DINT(X);
IF DINT_TO_REAL(FLOOR2) > X THEN
	FLOOR2 := FLOOR2 - DINT#1;
END_IF;
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[This is a rounding function which returns the biggest possible integer which is less or equal to X. floor2(3.14) = 3 floor2(-3.14) = -4]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="MODR" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="IN">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="DIVI">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF divi = 0.0 THEN
	MODR := 0.0;
ELSE
	MODR := in - DINT_TO_REAL(FLOOR2(in / divi)) * divi;
END_IF;
(* from OSCAT library; www.oscat.de  *)
(* FC FLOOR2 required *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[modulo funtion for real numbers modr(5.5,2.5) = 0.5]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="DIFFER" pouType="function">
        <interface>
          <returnType>
            <BOOL/>
          </returnType>
          <inputVars>
            <variable name="IN1">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="IN2">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="x">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[DIFFER := ABS(in1 - in2) > X;
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this function checks if in1 differs more then x from in2 the output is true if abs(in1-in2) > X]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="ERF" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="x">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="x2">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="ax2">
              <type>
                <REAL/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[x2 := X*X;
ax2 := 0.147 * x2 + 1.0;
ERF := SQRT(1.0 - EXP(-X2 * ((0.27323954473516 + aX2)/(ax2)))) * INT_TO_REAL(SGN(x));
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[calculates the erf (error) function]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="SGN" pouType="function">
        <interface>
          <returnType>
            <INT/>
          </returnType>
          <inputVars>
            <variable name="x">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF X > 0.0 THEN
	sgn := 1;
ELSIF X < 0.0 THEN
	sgn := -1;
ELSE
	sgn := 0;
END_IF;
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[sgn returns 0 when X = 0 , -1 when X < 1 and +1 when X > 1]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="ERFC" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="x">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[ERFC := 1.0 - ERF(X);
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[calculates the inverse erf (error) function]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="EVEN" pouType="function">
        <interface>
          <returnType>
            <BOOL/>
          </returnType>
          <inputVars>
            <variable name="IN">
              <type>
                <DINT/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[even := NOT BIT_OF_DWORD(DINT_TO_DWORD(in),0);
(* from OSCAT library; www.oscat.de  *)
(* BIT_OF_DWORD required *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[checks an input for even  value the output is true if the input is even]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="BIT_OF_DWORD" pouType="function">
        <interface>
          <returnType>
            <BOOL/>
          </returnType>
          <inputVars>
            <variable name="IN">
              <type>
                <DWORD/>
              </type>
            </variable>
            <variable name="N">
              <type>
                <INT/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[BIT_OF_DWORD := (SHR(in,N) AND 16#00000001) > 0;
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this function extracts a single bit from the nth position from right (right is lowest bit the lowest Bit (Bit0 from in) is selected with N=0]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="EXPN" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="X">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="N">
              <type>
                <INT/>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="N_Word">
              <type>
                <WORD/>
              </type>
            </variable>
            <variable name="X_Tmp">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="sign">
              <type>
                <BOOL/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[N_word := INT_TO_WORD(N);
X_tmp := X;
sign := BIT_OF_DWORD(WORD_TO_DWORD(N_word),15);
N_word := INT_TO_WORD(ABS(N));
IF BIT_OF_DWORD(WORD_TO_DWORD(N_word),0) THEN expn := X_tmp; ELSE expn := 1.0; END_IF;    (* N_word.N *)
N_word := SHR(N_word,1);
WHILE N_word > WORD#0 DO
	X_tmp := X_tmp * X_tmp;
	IF BIT_OF_DWORD(WORD_TO_DWORD(N_word),0) THEN expn := expn * X_tmp; END_IF;       (* N_word.N *)
	N_word := SHR(N_word,1);
END_WHILE;
IF sign THEN EXPN := 1.0 / EXPN; END_IF;
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this function calculates X to the power of N (Y = X^N) whilke N is an integer especially on CPU's without a floating point unit this algorythm is about 30 times faster then the IEC standard EXPT() Function]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="FACT" pouType="function">
        <interface>
          <returnType>
            <DINT/>
          </returnType>
          <inputVars>
            <variable name="x">
              <type>
                <INT/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[CASE X OF
00: FACT := DINT#1;
01: FACT := DINT#1;
02: FACT := DINT#2;
03: FACT := DINT#6;
04: FACT := DINT#24;
05: FACT := DINT#120;
06: FACT := DINT#720;
07: FACT := DINT#5040;
08: FACT := DINT#40320;
09: FACT := DINT#362880;
10: FACT := DINT#3628800;
11: FACT := DINT#39916800;
12: FACT := DINT#479001600;
ELSE
    FACT := DINT#-1;
END_CASE;
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this function calculates the factorial of x if the input is negative or higher then 12 the output will be -1]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="FIB" pouType="function">
        <interface>
          <returnType>
            <DINT/>
          </returnType>
          <inputVars>
            <variable name="X">
              <type>
                <INT/>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="t1">
              <type>
                <DINT/>
              </type>
            </variable>
            <variable name="t2">
              <type>
                <DINT/>
              </type>
            </variable>
            <variable name="x_tmp">
              <type>
                <INT/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[t1 := DINT#0;
t2 := DINT#0;
X_tmp := X;
IF X_tmp < 0 OR X_tmp > 46 THEN
	FIB := DINT#-1;
ELSIF X_tmp < 2 THEN
	FIB := INT_TO_DINT(X_tmp);
	RETURN;
ELSE
	(* the fibonacci number is the sum of the two suceeding fibonaci numbers *)
	(* we store the numbers alternatively in t1 and t2 depending on pt *)
	t2 := DINT#1;
	WHILE X_tmp > 3 DO
		X_tmp := X_tmp - 2;
		t1 := t1 + t2;
		t2 := t1 + t2;
	END_WHILE;
	IF X_tmp > 2 THEN t1 := t1 + t2; END_IF;
	fib := t1 + t2;
END_IF;

(* alternative code for very big numbers

IF X < 31 THEN
	fib := 0.4472136 * (expn(1.618034,X) - expn(-0.618034,X));
ELSE
	fib := 0.4472133 * expn(1.618034,X);
END_IF;
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[calculates the fibonacci sequence]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="FRACT" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="X">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF ABS(x) < 2.0E9 THEN
	FRACT := x - DINT_TO_REAL(D_TRUNC(x));
ELSE
	FRACT := 0.0;
END_IF;
(* from OSCAT library; www.oscat.de  *)
(* D_TRUNC required *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this function returns the fraction of a real number fract(3.14) = 0.14]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="GAUSS" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="X">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="U">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="SI">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="temp">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="si_inv">
              <type>
                <REAL/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[temp := X - U;
si_inv := 1.0  / si;
GAUSS := EXP(Temp * Temp * si_inv * SI_inv * - 0.5) * 0.39894228 * si_inv;
(* BIT_OF_DWORD required *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this function calculates the gaussian density function]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="GAUSSCD" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="X">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="U">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="SI">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[GAUSSCD := (ERF((X - U) / (SI * 1.414213562)) + 1.0) * 0.5;
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this function calculates the gaussian cumulative distribution function]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="GCD" pouType="function">
        <interface>
          <returnType>
            <INT/>
          </returnType>
          <inputVars>
            <variable name="A">
              <type>
                <DINT/>
              </type>
            </variable>
            <variable name="B">
              <type>
                <DINT/>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="_t">
              <type>
                <DINT/>
              </type>
            </variable>
            <variable name="_a">
              <type>
                <DINT/>
              </type>
            </variable>
            <variable name="_b">
              <type>
                <DINT/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[_A := A;
_B := B;

IF _A = DINT#0 THEN
	GCD := DINT_TO_INT(ABS(_B));
ELSIF _B = DINT#0 THEN
	GCD := DINT_TO_INT(ABS(_A));
ELSE
	_A := ABS(_A);
	_B := ABS(_B);
	GCD := 1;

	WHILE NOT((DINT_TO_DWORD(_A) AND DWORD#1) > DWORD#0 OR (DINT_TO_DWORD(_B) AND DWORD#1) > DWORD#0) DO
		_A := DWORD_TO_DINT(SHR(DINT_TO_DWORD(_A),1));
		_B := DWORD_TO_DINT(SHR(DINT_TO_DWORD(_B),1));
		GCD := DWORD_TO_INT(SHR(INT_TO_DWORD(GCD),1));
	END_WHILE;
	WHILE _A > DINT#0 DO
		IF NOT((DINT_TO_DWORD(_A) AND DWORD#1) > DWORD#0) THEN
			_A := DWORD_TO_DINT(SHR(DINT_TO_DWORD(_A),1));
		ELSIF NOT((DINT_TO_DWORD(_B) AND DWORD#1) > DWORD#0) THEN
			_B := DWORD_TO_DINT(SHR(DINT_TO_DWORD(_B),1));
		ELSE
			_t := DWORD_TO_DINT(SHR(DINT_TO_DWORD(ABS(_A-_B)),1));
			IF _A < _B THEN
				_B := _t;
			ELSE
				_A := _t;
			END_IF;
		END_IF;
	END_WHILE;
	GCD := GCD * DINT_TO_INT(_B);
END_IF;
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this function calculates the gretaest common divisor of two numbers A and B]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="GDF" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="x">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF X = 0.0 THEN
	GDF := 0.0;
ELSIF X > 15.0 THEN
	GDF := 1.5707963267949;
ELSIF X < -15.0 THEN
	GDF := -1.5707963267949;
ELSE
	GDF := ATAN(EXP(X)) * 2.0 - 1.5707963267949;
END_IF;
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this function calculates the Gudermannian function]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="GOLD" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <localVars>
            <variable name="X">
              <type>
                <REAL/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[GOLD := (X + SQRT(X*X + 4.0)) * 0.5;
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[calculates the golden function]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="HYPOT" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="X">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="Y">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[HYPOT := SQRT(x*x + y*y);
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[calculates the pythagorean function]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="INC" pouType="function">
        <interface>
          <returnType>
            <INT/>
          </returnType>
          <inputVars>
            <variable name="X">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="_D">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="M">
              <type>
                <INT/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[inc := (X + _D + M + 1) MOD (M + 1);
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[This is a increment function which increments the input X by the value D and compares the result with M. if the output exceeds M it will continue to count from 0 again.]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="INC1" pouType="function">
        <interface>
          <returnType>
            <INT/>
          </returnType>
          <inputVars>
            <variable name="X">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="N">
              <type>
                <INT/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF X >= N - 1 THEN
	INC1 := 0;
ELSE
	INC1 := X + 1;
END_IF;
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[This is a increment function which increments the variable X by 1 and if N is reached, it begins with 0 instead of N again.]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="INC2" pouType="function">
        <interface>
          <returnType>
            <INT/>
          </returnType>
          <inputVars>
            <variable name="X">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="_D">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="L">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="U">
              <type>
                <INT/>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="tmp">
              <type>
                <INT/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[tmp := U - L + 1;
INC2 := (X + _D - L + tmp) MOD tmp + L;
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[This function increments the input X by the value D and compares the result with U. If the output exceeds U it will continue to count from L again.]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="INV" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="X">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF X <> 0.0 THEN INV := 1.0 / X; END_IF;
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[This function calculates the result of 1 / X]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="LAMBERT_W" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="X">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="w">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="i">
              <type>
                <INT/>
              </type>
            </variable>
            <variable name="we">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="w1e">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="ewx">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="last">
              <type>
                <DWORD/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF x < -0.367879441171442 THEN
	LAMBERT_W := -1000.0;
	RETURN;
(* return 0 if x = 0 *)
ELSIF x = 0.0 THEN
	RETURN;
(* first an estimate is calculated *)
ELSIF x <= 500.0 THEN
	w := LN(x + 1.0);
	w := 0.665 * (1.0 + 0.0195 * w) * w + 0.04;
ELSE
	w := LN(x - 4.0) - (1.0 - 1.0/LN(x)) * LN(LN(x));
END_IF;
(* use estimate to calculate exact result *)
FOR i := 0 TO 5 DO
	ewx := EXP(w);
	we := w * ewx - x;
	w1e := (w+1.0) * ewx;
	last := REAL_TO_DWORD(w) AND DWORD#16#FFFF_FFFC;
	w := w - (we / (w1e - (w+2.0) * we / (2.0 * w + 2.0)));
	IF (REAL_TO_DWORD(w) AND DWORD#16#FFFF_FFFC) = last THEN EXIT; END_IF;
END_FOR;
LAMBERT_W := w;
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this function calculates the lambert_w function.]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="LANGEVIN" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="X">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF X = 0.0 THEN
	LANGEVIN := 0.0;
ELSE
	LANGEVIN := COTH(X) - 1.0 / X;
END_IF;
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this function calculates the langevin function]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="MAX3" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="IN1">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="IN2">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="IN3">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[MAX3 := MAX(MAX(IN1,IN2),IN3);
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this function returns the highest of 3 real values]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="MID3" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="IN1">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="IN2">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="IN3">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="_IN1">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="_IN2">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="_IN3">
              <type>
                <REAL/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[_IN1 := IN1; (* VAR_INPUT auf Variablen umkopieren , da diese schreibgeschützt sind *)
_IN2 := IN2;
_IN3 := IN3;

IF _IN1 > _IN2 THEN MID3 := _IN1; _IN1 := _IN2; _IN2 := MID3; END_IF;
IF _IN2 > _IN3 THEN _IN2 := _IN3; END_IF;
MID3 := SEL(_IN1 > _IN2, _IN2, _IN1);
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[returns the mid value of 3 real inputs]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="MIN3" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="IN1">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="IN2">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="IN3">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[MIN3 := MIN(MIN(IN1,IN2),IN3);
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this function returns the lowest of 3 real values]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="MUL_ADD" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="X">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="K">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="O">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[MUL_ADD := X * K + O;
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this function multiplies an input X with K and adds Offset O to the result.]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="NEGX" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="x">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[NEGX := -X;
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[This function returns -X]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="RAD1" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="_DEG">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[Rad1 := modR(0.0174532925199433 * _deg , 6.283185307179586476);
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this function converts Radiant to degrees]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="REAL_TO_FRAC" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="x">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="n">
              <type>
                <INT/>
              </type>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="_REAL_TO_FRAC">
              <type>
                <derived name="FRACTION"/>
              </type>
            </variable>
          </outputVars>
          <localVars>
            <variable name="temp">
              <type>
                <DINT/>
              </type>
            </variable>
            <variable name="sign">
              <type>
                <BOOL/>
              </type>
            </variable>
            <variable name="X_gerundet">
              <type>
                <DINT/>
              </type>
            </variable>
            <variable name="X_ohne_Nachkomma">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="Numerator">
              <type>
                <DINT/>
              </type>
              <initialValue>
                <simpleValue value="1"/>
              </initialValue>
            </variable>
            <variable name="Denominator">
              <type>
                <DINT/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
            </variable>
            <variable name="Numerator_old">
              <type>
                <DINT/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
            </variable>
            <variable name="Denominator_old">
              <type>
                <DINT/>
              </type>
              <initialValue>
                <simpleValue value="1"/>
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF X < 0.0 THEN
	sign := TRUE;								(* Vorzeichen merken *)
	X := ABS(X);								(* Absolutwert berechnen *)
END_IF;

REPEAT
	X_gerundet := REAL_TO_DINT(X);

	(* Zaehler berechnen *)
	temp := numerator * X_gerundet + numerator_old;		(* Zaehler um Vorkammawert erweitern *)
	numerator_old := numerator;							(* Zaehler der letzten Berechnung speichern *)
	numerator := temp;									(* Zaehler dieser Berechnung speichern *)

	(* Nenner berechnen *)
	temp := denominator * X_gerundet + denominator_old;	(* Nenner um Vorkammawert erweitern *)
	denominator_old := denominator;						(* Nenner der letzten Berechnung speichern *)
	denominator := temp;								(* Nenner dieser Berechnung speichern *)

	(* Restwert berechnen *)
	X_ohne_Nachkomma := DINT_TO_REAL(X_gerundet);
	IF X = X_ohne_Nachkomma THEN						(* Bruch geht ohne Rest auf *)
		IF ABS(denominator) <= INT_TO_DINT(N) THEN		(* kein Rundungsfehler *)
			numerator_old := numerator;					(* Numerator_old wird von Funktion zurückgegeben *)
			denominator_old := denominator;				(* Denominator_old wird von Funktion zurückgegeben *)
		END_IF;
		EXIT;											(* keine weitere Berechnung notwendig *)
	ELSE
		X := 1.0 / (X - X_ohne_Nachkomma);				(* Kehrwert vom Rest -> Neuer Bruch *)
	END_IF;

UNTIL
	( ABS(Denominator) > INT_TO_DINT(N))
END_REPEAT;

IF sign THEN
	_REAL_TO_FRAC.NUMERATOR := -1 * ABS(DINT_TO_INT(numerator_old));
ELSE
	_REAL_TO_FRAC.NUMERATOR :=  ABS(DINT_TO_INT(numerator_old));
END_IF;

_REAL_TO_FRAC.DENOMINATOR := ABS(DINT_TO_INT(denominator_old));

(* from OSCAT library; www.oscat.de  *)
(* user defined data type "FRACTION" required *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this function calculates the closest fraction for a real number]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="RND" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="X">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="N">
              <type>
                <INT/>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="M">
              <type>
                <REAL/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF X = 0.0 THEN
	RND := 0.0;
ELSE
	M := EXPN(10.0,N - CEIL(LOG(ABS(X))));
	RND := DINT_TO_REAL(REAL_TO_DINT(X * M)) / M ;
END_IF;
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this function rounds a real down to n digits total. round(3.1415,2) = 3.1]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="ROUND" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="IN">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="N">
              <type>
                <INT/>
              </type>
            </variable>
          </inputVars>
          <localVars>
            <variable name="X">
              <type>
                <REAL/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF N < 4 THEN
	IF N < 2 THEN
		IF N = 0 THEN X := 1.0; ELSE X := 10.0; END_IF;
	ELSE
		IF N = 2 THEN X := 100.0; ELSE X := 1000.0; END_IF;
	END_IF;
ELSE
	IF N < 6 THEN
		IF N = 4 THEN X := 10000.0; ELSE X := 100000.0; END_IF;
	ELSE
		IF N = 6 THEN X := 1000000.0; ELSE X := 10000000.0; END_IF;
	END_IF;
END_IF;

ROUND := DINT_TO_REAL(REAL_TO_DINT(in * X)) / X;

(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this function rounds a real down to n digits behind the comma. round(3.1415,1) = 3.1]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="SIGMOID" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="X">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF X > 20.0 THEN
	SIGMOID := 1.0;
ELSIF x < -85.0 THEN
	SIGMOID := 0.0;
ELSE
	SIGMOID := 1.0 / (1.0 + EXP(-X));
END_IF;
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this function calculates the sigmoid function]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="SIGN_I" pouType="function">
        <interface>
          <returnType>
            <BOOL/>
          </returnType>
          <inputVars>
            <variable name="IN">
              <type>
                <DINT/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[sign_I := BIT_OF_DWORD(DINT_TO_DWORD(in),31);
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this function return true if the integer input is negative]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="SIGN_R" pouType="function">
        <interface>
          <returnType>
            <BOOL/>
          </returnType>
          <inputVars>
            <variable name="IN">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[SIGN_R := in < 0.0;
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this function return true if the real input is negative]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="SINC" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="X">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF X = 0.0 THEN
	SINC := 1.0;
ELSE
	SINC := SIN(x) / x;
END_IF;
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this function calculates the sinc function.]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="SINH" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <localVars>
            <variable name="X">
              <type>
                <REAL/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF ABS(x) < 2.0E-3 THEN
	SINH := X;
ELSE
	SINH := (EXP(x) - EXP(-x)) * 0.5;
END_IF;
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this function calculates the sin hyperbolicus]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="SQRTN" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <localVars>
            <variable name="X">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="N">
              <type>
                <INT/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF N > 0 THEN
	SQRTN := EXP(LN(x) / INT_TO_REAL(n));
ELSE
	SQRTN := 0.0;
END_IF;
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this function calculates the nth root function of X according to the formula sqrtn = x^(1/n).]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="TANC" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="X">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF X = 0.0 THEN
	TANC := 1.0;
ELSE
	TANC := TAN(x) / x;
END_IF;
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this function calculates the tanc function.]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="TANH" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="X">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF X > 20.0 THEN
	TANH := 1.0;
ELSIF X < -20.0 THEN
	TANH := -1.0;
ELSE
	TANH := 1.0 - 2.0 / (EXP(2.0 * x) + 1.0);
END_IF;
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this function calculates the tangens hyperbolicus]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="WINDOW" pouType="function">
        <interface>
          <returnType>
            <BOOL/>
          </returnType>
          <inputVars>
            <variable name="LOW">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="IN">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="HIGH">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[window := (in < high) AND (in > low);
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this checks a signal if the signal is between the upper and lower limit]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="WINDOW2" pouType="function">
        <interface>
          <returnType>
            <BOOL/>
          </returnType>
          <inputVars>
            <variable name="LOW">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="IN">
              <type>
                <REAL/>
              </type>
            </variable>
            <variable name="HIGH">
              <type>
                <REAL/>
              </type>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[window2 := (in <= high) AND (in >= low);
(* from OSCAT library; www.oscat.de  *)]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[this checks a signal if the signal is between the upper and lower limit including the two limits]]></xhtml:p>
        </documentation>
      </pou>
    </pous>
  </types>
  <instances>
    <configurations>
      <configuration name="Config0">
        <resource name="Res0">
          <task name="task0" priority="0" interval="T#20ms">
            <pouInstance name="instance0" typeName="program0"/>
          </task>
        </resource>
      </configuration>
    </configurations>
  </instances>
</project>
